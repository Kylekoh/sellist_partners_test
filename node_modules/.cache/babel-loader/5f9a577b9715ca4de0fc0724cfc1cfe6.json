{"ast":null,"code":"var _jsxFileName = \"/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/CreateEvent/CreateEventItem/CheckFreeEventModal.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport CancelIcon from \"../../../Images/CancelIcon\";\nimport { openModal } from \"../../../modules/CheckModalModule\";\n\nfunction CheckFreeEventModal() {\n  const dispatch = useDispatch();\n  const notEnoughPoint = useSelector(store => store.notenoughReducer);\n  const username = useSelector(store => store.usernameReducer);\n  const eventname = useSelector(store => store.eventnameReducer);\n  const profileimg = useSelector(store => store.profileimgReducer);\n  const eventimg = useSelector(store => store.eventimgReducer);\n  const eventUrl = useSelector(store => store.eventurlReducer);\n  const shoppingUrl = useSelector(store => store.shoppingurlReducer);\n  const originalPrice = useSelector(store => store.originalpriceReducer);\n  const newPrice = useSelector(store => store.newpriceReducer);\n  const durationStart = useSelector(store => store.durationStartReducer);\n  const durationEnd = useSelector(store => store.durationEndReducer);\n  const category = useSelector(store => store.eventcategoryReducer);\n  const duration = durationStart && durationEnd; // 이벤트 생성시 값을 선택하지 않고 확인 버튼을 눌렀을 때 나오는 알림창 생성용 LIST\n\n  const lists = [// { type: notEnoughPoint, text: \"포인트가 부족합니다. 충전해주세요\" },\n  {\n    type: username,\n    text: \"ID를 입력해주세요\"\n  }, {\n    type: eventname,\n    text: \"이벤트 이름을 입력해주세요\"\n  }, {\n    type: eventUrl,\n    text: \"이벤트 URL을 입력해주세요\"\n  }, {\n    type: shoppingUrl,\n    text: \"샵페이지 URL을 입력해주세요\"\n  }, {\n    type: originalPrice,\n    text: \"정상판매가를 입력해주세요\"\n  }, {\n    type: newPrice,\n    text: \"할인판매가를 입력해주세요\"\n  }, {\n    type: duration,\n    text: \"이벤트 기간을 입력해주세요\"\n  }, {\n    type: category,\n    text: \"카테고리를 입력해주세요\"\n  }, {\n    type: profileimg,\n    text: \"프로필 사진을 업로드 해주세요\"\n  }, {\n    type: eventimg,\n    text: \"이벤트 썸네일을 업로드 해주세요\"\n  }];\n\n  const keepModalWindow = e => {\n    e.stopPropagation();\n  };\n\n  const handleModal = () => {\n    dispatch(openModal(false));\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    onClick: handleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalContainer, {\n    onClick: keepModalWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SubContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"\\uB2E4\\uC74C\\uD56D\\uBAA9\\uC744 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694\"), /*#__PURE__*/React.createElement(IconWrap, {\n    onClick: handleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CancelIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, lists.map(list => /*#__PURE__*/React.createElement(React.Fragment, null, !list.type && /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: \"/images/xIcon.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }), list.text))))));\n}\n\nexport default CheckFreeEventModal;\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  position: fixed;\n  z-index: 11;\n  background-color: rgba(0, 0, 0, 0.65);\n  ${({\n  theme\n}) => theme.flex(\"center\", \"center\", \"null\")}\n`;\nconst ModalContainer = styled.div`\n  width: 688px;\n  left: 29px;\n  top: 0px;\n  border-radius: 24px;\n  background-color: #f5f5f5;\n  box-shadow: 0px 2px 4px rgba(66, 66, 66, 0.14),\n    0px 3px 4px rgba(66, 66, 66, 0.12), 0px 1px 5px rgba(66, 66, 66, 0.2);\n`;\nconst SubContainer = styled.div`\n  height: 35px;\n  top: 10px;\n  left: 100px;\n  ${({\n  theme\n}) => theme.flex(\"center\", \"center\", \"null\")}\n`;\nconst Title = styled.span`\n  font-size: 30px;\n  margin-top: 80px;\n`;\nconst IconWrap = styled.div`\n  cursor: pointer;\n  position: relative;\n  top: 35px;\n  left: 100px;\n`;\nconst MainContainer = styled.div`\n  width: 100%;\n  padding: 70px 100px 60px;\n`;\nconst List = styled.div`\n  color: #424242;\n  font-size: 16px;\n  margin: 20px;\n  width: 237px;\n  white-space: nowrap;\n  height: 21px;\n\n  :last-of-type {\n    margin-bottom: 0;\n  }\n`;\nconst Image = styled.img`\n  color: red;\n  margin-right: 10px;\n`;","map":{"version":3,"sources":["/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/CreateEvent/CreateEventItem/CheckFreeEventModal.js"],"names":["React","useDispatch","useSelector","styled","CancelIcon","openModal","CheckFreeEventModal","dispatch","notEnoughPoint","store","notenoughReducer","username","usernameReducer","eventname","eventnameReducer","profileimg","profileimgReducer","eventimg","eventimgReducer","eventUrl","eventurlReducer","shoppingUrl","shoppingurlReducer","originalPrice","originalpriceReducer","newPrice","newpriceReducer","durationStart","durationStartReducer","durationEnd","durationEndReducer","category","eventcategoryReducer","duration","lists","type","text","keepModalWindow","e","stopPropagation","handleModal","map","list","Wrapper","div","theme","flex","ModalContainer","SubContainer","Title","span","IconWrap","MainContainer","List","Image","img"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,SAAT,QAA0B,mCAA1B;;AAEA,SAASC,mBAAT,GAA+B;AAC7B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,cAAc,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,gBAAhB,CAAlC;AACA,QAAMC,QAAQ,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACG,eAAhB,CAA5B;AACA,QAAMC,SAAS,GAAGX,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACK,gBAAhB,CAA7B;AACA,QAAMC,UAAU,GAAGb,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACO,iBAAhB,CAA9B;AACA,QAAMC,QAAQ,GAAGf,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACS,eAAhB,CAA5B;AACA,QAAMC,QAAQ,GAAGjB,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACW,eAAhB,CAA5B;AACA,QAAMC,WAAW,GAAGnB,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACa,kBAAhB,CAA/B;AACA,QAAMC,aAAa,GAAGrB,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACe,oBAAhB,CAAjC;AACA,QAAMC,QAAQ,GAAGvB,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACiB,eAAhB,CAA5B;AACA,QAAMC,aAAa,GAAGzB,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACmB,oBAAhB,CAAjC;AACA,QAAMC,WAAW,GAAG3B,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACqB,kBAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAG7B,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACuB,oBAAhB,CAA5B;AACA,QAAMC,QAAQ,GAAGN,aAAa,IAAIE,WAAlC,CAd6B,CAgB7B;;AACA,QAAMK,KAAK,GAAG,CACZ;AACA;AAAEC,IAAAA,IAAI,EAAExB,QAAR;AAAkByB,IAAAA,IAAI,EAAE;AAAxB,GAFY,EAGZ;AAAED,IAAAA,IAAI,EAAEtB,SAAR;AAAmBuB,IAAAA,IAAI,EAAE;AAAzB,GAHY,EAIZ;AAAED,IAAAA,IAAI,EAAEhB,QAAR;AAAkBiB,IAAAA,IAAI,EAAE;AAAxB,GAJY,EAKZ;AAAED,IAAAA,IAAI,EAAEd,WAAR;AAAqBe,IAAAA,IAAI,EAAE;AAA3B,GALY,EAMZ;AAAED,IAAAA,IAAI,EAAEZ,aAAR;AAAuBa,IAAAA,IAAI,EAAE;AAA7B,GANY,EAOZ;AAAED,IAAAA,IAAI,EAAEV,QAAR;AAAkBW,IAAAA,IAAI,EAAE;AAAxB,GAPY,EAQZ;AAAED,IAAAA,IAAI,EAAEF,QAAR;AAAkBG,IAAAA,IAAI,EAAE;AAAxB,GARY,EASZ;AAAED,IAAAA,IAAI,EAAEJ,QAAR;AAAkBK,IAAAA,IAAI,EAAE;AAAxB,GATY,EAUZ;AAAED,IAAAA,IAAI,EAAEpB,UAAR;AAAoBqB,IAAAA,IAAI,EAAE;AAA1B,GAVY,EAWZ;AAAED,IAAAA,IAAI,EAAElB,QAAR;AAAkBmB,IAAAA,IAAI,EAAE;AAAxB,GAXY,CAAd;;AAcA,QAAMC,eAAe,GAAGC,CAAC,IAAI;AAC3BA,IAAAA,CAAC,CAACC,eAAF;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBjC,IAAAA,QAAQ,CAACF,SAAS,CAAC,KAAD,CAAV,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEmC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,OAAO,EAAEH,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADF,eAEE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEG,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,eAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACb,0CACG,CAACA,IAAI,CAACP,IAAN,iBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGO,IAAI,CAACN,IAFR,CAFJ,CADD,CADH,CAPF,CADF,CADF;AAwBD;;AAED,eAAe9B,mBAAf;AAEA,MAAMqC,OAAO,GAAGxC,MAAM,CAACyC,GAAI;;;;;;;;IAQvB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAN,CAAW,QAAX,EAAqB,QAArB,EAA+B,MAA/B,CAAuC;CAR1D;AAWA,MAAMC,cAAc,GAAG5C,MAAM,CAACyC,GAAI;;;;;;;;CAAlC;AAUA,MAAMI,YAAY,GAAG7C,MAAM,CAACyC,GAAI;;;;IAI5B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAN,CAAW,QAAX,EAAqB,QAArB,EAA+B,MAA/B,CAAuC;CAJ1D;AAOA,MAAMG,KAAK,GAAG9C,MAAM,CAAC+C,IAAK;;;CAA1B;AAKA,MAAMC,QAAQ,GAAGhD,MAAM,CAACyC,GAAI;;;;;CAA5B;AAOA,MAAMQ,aAAa,GAAGjD,MAAM,CAACyC,GAAI;;;CAAjC;AAKA,MAAMS,IAAI,GAAGlD,MAAM,CAACyC,GAAI;;;;;;;;;;;CAAxB;AAaA,MAAMU,KAAK,GAAGnD,MAAM,CAACoD,GAAI;;;CAAzB","sourcesContent":["import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport CancelIcon from \"../../../Images/CancelIcon\";\nimport { openModal } from \"../../../modules/CheckModalModule\";\n\nfunction CheckFreeEventModal() {\n  const dispatch = useDispatch();\n  const notEnoughPoint = useSelector(store => store.notenoughReducer);\n  const username = useSelector(store => store.usernameReducer);\n  const eventname = useSelector(store => store.eventnameReducer);\n  const profileimg = useSelector(store => store.profileimgReducer);\n  const eventimg = useSelector(store => store.eventimgReducer);\n  const eventUrl = useSelector(store => store.eventurlReducer);\n  const shoppingUrl = useSelector(store => store.shoppingurlReducer);\n  const originalPrice = useSelector(store => store.originalpriceReducer);\n  const newPrice = useSelector(store => store.newpriceReducer);\n  const durationStart = useSelector(store => store.durationStartReducer);\n  const durationEnd = useSelector(store => store.durationEndReducer);\n  const category = useSelector(store => store.eventcategoryReducer);\n  const duration = durationStart && durationEnd;\n\n  // 이벤트 생성시 값을 선택하지 않고 확인 버튼을 눌렀을 때 나오는 알림창 생성용 LIST\n  const lists = [\n    // { type: notEnoughPoint, text: \"포인트가 부족합니다. 충전해주세요\" },\n    { type: username, text: \"ID를 입력해주세요\" },\n    { type: eventname, text: \"이벤트 이름을 입력해주세요\" },\n    { type: eventUrl, text: \"이벤트 URL을 입력해주세요\" },\n    { type: shoppingUrl, text: \"샵페이지 URL을 입력해주세요\" },\n    { type: originalPrice, text: \"정상판매가를 입력해주세요\" },\n    { type: newPrice, text: \"할인판매가를 입력해주세요\" },\n    { type: duration, text: \"이벤트 기간을 입력해주세요\" },\n    { type: category, text: \"카테고리를 입력해주세요\" },\n    { type: profileimg, text: \"프로필 사진을 업로드 해주세요\" },\n    { type: eventimg, text: \"이벤트 썸네일을 업로드 해주세요\" }\n  ];\n\n  const keepModalWindow = e => {\n    e.stopPropagation();\n  };\n\n  const handleModal = () => {\n    dispatch(openModal(false));\n  };\n\n  return (\n    <Wrapper onClick={handleModal}>\n      <ModalContainer onClick={keepModalWindow}>\n        <SubContainer>\n          <Title>다음항목을 확인해주세요</Title>\n          <IconWrap onClick={handleModal}>\n            <CancelIcon />\n          </IconWrap>\n        </SubContainer>\n        <MainContainer>\n          {lists.map(list => (\n            <>\n              {!list.type && (\n                <List>\n                  <Image src=\"/images/xIcon.svg\" />\n                  {list.text}\n                </List>\n              )}\n            </>\n          ))}\n        </MainContainer>\n      </ModalContainer>\n    </Wrapper>\n  );\n}\n\nexport default CheckFreeEventModal;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  position: fixed;\n  z-index: 11;\n  background-color: rgba(0, 0, 0, 0.65);\n  ${({ theme }) => theme.flex(\"center\", \"center\", \"null\")}\n`;\n\nconst ModalContainer = styled.div`\n  width: 688px;\n  left: 29px;\n  top: 0px;\n  border-radius: 24px;\n  background-color: #f5f5f5;\n  box-shadow: 0px 2px 4px rgba(66, 66, 66, 0.14),\n    0px 3px 4px rgba(66, 66, 66, 0.12), 0px 1px 5px rgba(66, 66, 66, 0.2);\n`;\n\nconst SubContainer = styled.div`\n  height: 35px;\n  top: 10px;\n  left: 100px;\n  ${({ theme }) => theme.flex(\"center\", \"center\", \"null\")}\n`;\n\nconst Title = styled.span`\n  font-size: 30px;\n  margin-top: 80px;\n`;\n\nconst IconWrap = styled.div`\n  cursor: pointer;\n  position: relative;\n  top: 35px;\n  left: 100px;\n`;\n\nconst MainContainer = styled.div`\n  width: 100%;\n  padding: 70px 100px 60px;\n`;\n\nconst List = styled.div`\n  color: #424242;\n  font-size: 16px;\n  margin: 20px;\n  width: 237px;\n  white-space: nowrap;\n  height: 21px;\n\n  :last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nconst Image = styled.img`\n  color: red;\n  margin-right: 10px;\n`;\n"]},"metadata":{},"sourceType":"module"}