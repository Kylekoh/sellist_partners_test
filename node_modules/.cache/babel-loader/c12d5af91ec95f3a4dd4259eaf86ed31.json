{"ast":null,"code":"var _jsxFileName = \"/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/CreateEvent/CreateEventDate/DateRangePicker.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\"; //DATEPICKER\n\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport { addDays } from \"date-fns\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ko from \"date-fns/locale/ko\";\nimport { setSponsorStartDate } from \"../../../modules/SponsorStartDateModule\";\nimport { setSponsorEndDate } from \"../../../modules/SponsorEndDateModule\";\nregisterLocale(\"ko\", ko);\n\nfunction DatePick() {\n  const sponsorStartDate = useSelector(store => store.sponsorStartDateReducer);\n  const sponsorEndDate = useSelector(store => store.sponsorEndDateReducer);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const dispatch = useDispatch(); // User가 StartDate/EndDate 선택하는 순서와 상관없이 과거일을 StartDate 최신일을 EndDate로 반영하는 Logic\n\n  const onChange = dates => {\n    const [firstDate, secondDate] = dates;\n\n    if (!startDate || startDate && endDate) {\n      setStartDate(firstDate);\n      setEndDate(secondDate);\n      dispatch(setSponsorStartDate(firstDate));\n      dispatch(setSponsorEndDate(secondDate));\n    } else if (dates.every(date => date)) {\n      setStartDate(firstDate);\n      setEndDate(secondDate);\n      dispatch(setSponsorStartDate(firstDate));\n      dispatch(setSponsorEndDate(secondDate));\n    } else if (startDate && !secondDate) {\n      if (startDate > firstDate) {\n        setStartDate(firstDate);\n        setEndDate(startDate);\n        dispatch(setSponsorStartDate(firstDate));\n        dispatch(setSponsorEndDate(startDate));\n      } else {\n        setStartDate(startDate);\n        setEndDate(firstDate);\n        dispatch(setSponsorStartDate(startDate));\n        dispatch(setSponsorEndDate(firstDate));\n      }\n    }\n  }; // useEffect(() => {\n  //   dispatch(setSponsorStartDate(startDate));\n  //   dispatch(setSponsorEndDate(endDate));\n  //   console.log(\"광고 시작일\", sponsorStartDate);\n  //   console.log(\"광고 종료일\", sponsorEndDate);\n  // }, [startDate, endDate]);\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    locale: \"ko\",\n    selected: startDate,\n    onChange: onChange,\n    startDate: startDate,\n    endDate: endDate,\n    minDate: addDays(new Date(), 1),\n    selectsRange: true,\n    inline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default DatePick;\nconst Container = styled.div`\n  width: 550px;\n  display: flex;\n  align-items: center;\n  @media (max-width: 500px) {\n    background-color: green;\n    width: 95%;\n  }\n\n  .react-datepicker {\n    border: 1px solid #dee8ff;\n    border-radius: 12px;\n  }\n  .react-datepicker__month-container {\n    width: 100%;\n    border: none;\n  }\n  .react-datepicker__day {\n    margin: 0.2rem;\n  }\n  .react-datepicker__header {\n    width: 100%;\n    background: white;\n    border: none;\n    padding-top: 20px;\n  }\n  .react-datepicker__day-names {\n    width: 100%;\n    ${({\n  theme\n}) => theme.flex(\"space-evenly\", \"center\", \"row\")}\n  }\n  .react-datepicker__week {\n    width: 100%;\n    ${({\n  theme\n}) => theme.flex(\"space-evenly\", \"center\", \"row\")}\n  }\n\n  .react-datepicker__day--disabled {\n    background-color: #f5f5f5;\n  }\n  .react-datepicker__day {\n    height: 28px;\n    width: 70px;\n    @media (max-width: 500px) {\n      height: 31px;\n      width: 40px;\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/CreateEvent/CreateEventDate/DateRangePicker.js"],"names":["React","useState","useEffect","useDispatch","useSelector","styled","DatePicker","registerLocale","addDays","ko","setSponsorStartDate","setSponsorEndDate","DatePick","sponsorStartDate","store","sponsorStartDateReducer","sponsorEndDate","sponsorEndDateReducer","startDate","setStartDate","endDate","setEndDate","dispatch","onChange","dates","firstDate","secondDate","every","date","Date","Container","div","theme","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n//DATEPICKER\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport { addDays } from \"date-fns\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ko from \"date-fns/locale/ko\";\nimport { setSponsorStartDate } from \"../../../modules/SponsorStartDateModule\";\nimport { setSponsorEndDate } from \"../../../modules/SponsorEndDateModule\";\n\nregisterLocale(\"ko\", ko);\n\nfunction DatePick() {\n  const sponsorStartDate = useSelector(store => store.sponsorStartDateReducer);\n  const sponsorEndDate = useSelector(store => store.sponsorEndDateReducer);\n\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const dispatch = useDispatch();\n\n  // User가 StartDate/EndDate 선택하는 순서와 상관없이 과거일을 StartDate 최신일을 EndDate로 반영하는 Logic\n  const onChange = dates => {\n    const [firstDate, secondDate] = dates;\n\n    if (!startDate || (startDate && endDate)) {\n      setStartDate(firstDate);\n      setEndDate(secondDate);\n      dispatch(setSponsorStartDate(firstDate));\n      dispatch(setSponsorEndDate(secondDate));\n    } else if (dates.every(date => date)) {\n      setStartDate(firstDate);\n      setEndDate(secondDate);\n      dispatch(setSponsorStartDate(firstDate));\n      dispatch(setSponsorEndDate(secondDate));\n    } else if (startDate && !secondDate) {\n      if (startDate > firstDate) {\n        setStartDate(firstDate);\n        setEndDate(startDate);\n        dispatch(setSponsorStartDate(firstDate));\n        dispatch(setSponsorEndDate(startDate));\n      } else {\n        setStartDate(startDate);\n        setEndDate(firstDate);\n        dispatch(setSponsorStartDate(startDate));\n        dispatch(setSponsorEndDate(firstDate));\n      }\n    }\n  };\n\n  // useEffect(() => {\n  //   dispatch(setSponsorStartDate(startDate));\n  //   dispatch(setSponsorEndDate(endDate));\n\n  //   console.log(\"광고 시작일\", sponsorStartDate);\n  //   console.log(\"광고 종료일\", sponsorEndDate);\n  // }, [startDate, endDate]);\n\n  return (\n    <Container>\n      <DatePicker\n        locale=\"ko\"\n        selected={startDate}\n        onChange={onChange}\n        startDate={startDate}\n        endDate={endDate}\n        minDate={addDays(new Date(), 1)}\n        selectsRange\n        inline\n      />\n    </Container>\n  );\n}\n\nexport default DatePick;\n\nconst Container = styled.div`\n  width: 550px;\n  display: flex;\n  align-items: center;\n  @media (max-width: 500px) {\n    background-color: green;\n    width: 95%;\n  }\n\n  .react-datepicker {\n    border: 1px solid #dee8ff;\n    border-radius: 12px;\n  }\n  .react-datepicker__month-container {\n    width: 100%;\n    border: none;\n  }\n  .react-datepicker__day {\n    margin: 0.2rem;\n  }\n  .react-datepicker__header {\n    width: 100%;\n    background: white;\n    border: none;\n    padding-top: 20px;\n  }\n  .react-datepicker__day-names {\n    width: 100%;\n    ${({ theme }) => theme.flex(\"space-evenly\", \"center\", \"row\")}\n  }\n  .react-datepicker__week {\n    width: 100%;\n    ${({ theme }) => theme.flex(\"space-evenly\", \"center\", \"row\")}\n  }\n\n  .react-datepicker__day--disabled {\n    background-color: #f5f5f5;\n  }\n  .react-datepicker__day {\n    height: 28px;\n    width: 70px;\n    @media (max-width: 500px) {\n      height: 31px;\n      width: 40px;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}