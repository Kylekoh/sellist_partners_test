{"ast":null,"code":"var _jsxFileName = \"/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/ResetPwPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { SnackbarContent } from \"@material-ui/core\";\nimport ResetPw from \"../Components/resetPw/ResetPw\";\nimport { tokenApi, TOKEN } from \"../Config/urls\";\nimport Img1 from \"../Images/MaskGroup.png\";\nimport Img2 from \"../Images/MaskGroup2.png\";\n\nfunction ResetPwPage(props) {\n  const [valid, setvalid] = useState(false);\n  const [open, setOpen] = useState(false);\n  let url = props.location.search;\n  let i = url.indexOf(\"=\");\n  let token = url.slice(i + 1, url.length);\n\n  function checkIfTokenValid() {\n    const formData = new FormData();\n    formData.append(\"token\", token);\n    fetch(tokenApi, {\n      method: \"POST\",\n      headers: {\n        Authorization: TOKEN\n      },\n      body: formData\n    }).then(res => res.json()).then(res => {\n      if (res.success === 1) {\n        setvalid(true);\n      } else {\n        setvalid(false);\n        setOpen(true);\n        setTimeout(() => {\n          props.history.push(\"/\");\n        }, 3500);\n      }\n    });\n  }\n\n  useEffect(() => {\n    checkIfTokenValid();\n  });\n\n  if (valid) {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ImgRight, {\n      src: Img2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImgLeft, {\n      src: Img1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ResetPw, {\n      props: props,\n      token: token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"center\",\n      horizontal: \"center\"\n    },\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    message: \"\\uB9C1\\uD06C\\uC758 \\uC720\\uD6A8\\uAE30\\uAC04\\uC774 \\uB9CC\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\",\n    style: {\n      backgroundColor: \"#757575\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ResetPwPage;\nconst Container = styled.section`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background-color: #3c66ba;\n  overflow: hidden;\n`;\nconst ImgRight = styled.img`\n  ${({\n  theme\n}) => theme.imgRight}\n`;\nconst ImgLeft = styled.img`\n  ${({\n  theme\n}) => theme.imgLeft}\n`;","map":{"version":3,"sources":["/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/ResetPwPage.js"],"names":["React","useState","useEffect","styled","Snackbar","SnackbarContent","ResetPw","tokenApi","TOKEN","Img1","Img2","ResetPwPage","props","valid","setvalid","open","setOpen","url","location","search","i","indexOf","token","slice","length","checkIfTokenValid","formData","FormData","append","fetch","method","headers","Authorization","body","then","res","json","success","setTimeout","history","push","vertical","horizontal","backgroundColor","Container","section","ImgRight","img","theme","imgRight","ImgLeft","imgLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { SnackbarContent } from \"@material-ui/core\";\nimport ResetPw from \"../Components/resetPw/ResetPw\";\nimport { tokenApi, TOKEN } from \"../Config/urls\";\nimport Img1 from \"../Images/MaskGroup.png\";\nimport Img2 from \"../Images/MaskGroup2.png\";\n\nfunction ResetPwPage(props) {\n  const [valid, setvalid] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  let url = props.location.search;\n  let i = url.indexOf(\"=\");\n  let token = url.slice(i + 1, url.length);\n\n  function checkIfTokenValid() {\n    const formData = new FormData();\n    formData.append(\"token\", token);\n    fetch(tokenApi, {\n      method: \"POST\",\n      headers: {\n        Authorization: TOKEN\n      },\n      body: formData\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success === 1) {\n          setvalid(true);\n        } else {\n          setvalid(false);\n          setOpen(true);\n          setTimeout(() => {\n            props.history.push(\"/\");\n          }, 3500);\n        }\n      });\n  }\n\n  useEffect(() => {\n    checkIfTokenValid();\n  });\n\n  if (valid) {\n    return (\n      <Container>\n        <ImgRight src={Img2} />\n        <ImgLeft src={Img1} />\n        <ResetPw props={props} token={token} />\n      </Container>\n    );\n  }\n  return (\n    <Container>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"center\",\n          horizontal: \"center\"\n        }}\n        open={open}\n      >\n        <SnackbarContent\n          message=\"링크의 유효기간이 만료되었습니다.\"\n          style={{\n            backgroundColor: \"#757575\"\n          }}\n        />\n      </Snackbar>\n    </Container>\n  );\n}\n\nexport default ResetPwPage;\n\nconst Container = styled.section`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background-color: #3c66ba;\n  overflow: hidden;\n`;\n\nconst ImgRight = styled.img`\n  ${({ theme }) => theme.imgRight}\n`;\n\nconst ImgLeft = styled.img`\n  ${({ theme }) => theme.imgLeft}\n`;\n"]},"metadata":{},"sourceType":"module"}