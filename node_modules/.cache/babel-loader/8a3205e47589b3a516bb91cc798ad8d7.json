{"ast":null,"code":"var _jsxFileName = \"/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/CreateEvent/CreateEventItemPage.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport WarningDialog from \"../../Components/modals/WarningDialog\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CreateEventItem from \"./CreateEventItem/CreateEventItem\";\nimport CreateEventDate from \"./CreateEventDate/CreateEventDate\";\nimport TooltipModal from \"../../Components/modals/TootipModal\";\nimport DeleteParentModal from \"../Order/Components/DeleteParentModal\";\nimport DeletedSnackBar from \"../Order/Components/DeletedSnackBar\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { setTooltipToggle } from \"../../modules/TooltipModule\";\nimport { setUsername, setEventName, setEventUrl, setShoppingUrl, setOriginalPrice, setNewPrice, setUserImage, setEventImg, setEventCategory, setSalesDurationStart, setSalesDurationEnd, deleteProfileImg, deleteEventImg } from \"../../modules/UserInputModule\";\nimport { NewUserContext } from \"../../Context/newUserContext\";\nimport Loading from \"../../Components/Loading\";\n\nfunction CreateEventItemPage({\n  history\n}) {\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 500px)\"\n  });\n  const email = localStorage.getItem(\"email\");\n  const accessToken = localStorage.getItem(\"access_token\"); // const isNewUser = localStorage.getItem(\"new_user\") === \"1\";\n\n  const tooltipToggle = useSelector(store => store.toggleReducer);\n  const del = useSelector(store => store.deleteReducer);\n  const deleted = useSelector(store => store.confirmDeleteReducer);\n  const username = useSelector(store => store.usernameReducer);\n  const userImage = useSelector(store => store.profileimgReducer);\n  const eventname = useSelector(store => store.eventnameReducer);\n  const eventimg = useSelector(store => store.eventimgReducer);\n  const eventUrl = useSelector(store => store.eventurlReducer);\n  const shoppingUrl = useSelector(store => store.shoppingurlReducer);\n  const originalPrice = useSelector(store => store.originalpriceReducer);\n  const newPrice = useSelector(store => store.newpriceReducer);\n  const durationStart = useSelector(store => store.durationStartReducer);\n  const durationEnd = useSelector(store => store.durationEndReducer);\n  const category = useSelector(store => store.eventcategoryReducer);\n  const pointCheck = useSelector(store => store.checkPointReducer); //무엇인가를 한번이라도 수정하고 페이지를 나가려고 하면 그때 띄울 것이다. when에 넣어줄 boolean 값\n\n  const [shouldConfirm, setShouldConfirm] = useState(false); //isLeave값은 모달에서 나가기 버튼을 클릭했을 때 true로 변경\n\n  const [isLeave, setIsLeave] = useState(false);\n  const [lastLocation, setLastLocation] = useState();\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const {\n    isNewUser,\n    setIsNewUser\n  } = useContext(NewUserContext);\n  const dispatch = useDispatch();\n\n  const showModal = location => {\n    // if (location.pathname === \"/CreateEvent/CreateDate\") {\n    //   console.log(\"1111\");\n    //   setShowConfirmModal(false);\n    //   setLastLocation(location);\n    // } else {\n    //   console.log(\"222\");\n    //   setShowConfirmModal(true);\n    //   setLastLocation(location);\n    // }\n    setShowConfirmModal(true);\n    setLastLocation(location);\n  }; //아니요 눌렀을 때 발생하는 함수\n\n\n  const closeModal = () => {\n    setShowConfirmModal(false);\n  }; //네 눌렀을 때 발생하는 함수, 모달창없어지면서 현재 창을 떠난다!\n\n\n  const handleConfirmNavigationClick = () => {\n    setShowConfirmModal(false);\n    setIsLeave(true); // 밖으로가기 버튼을 눌렀을시 입력된 모든 정보를 리셋한다.\n\n    dispatch(setUserImage(null));\n    dispatch(setEventImg(null));\n    dispatch(setUsername(null));\n    dispatch(setEventName(null));\n    dispatch(setEventUrl(null));\n    dispatch(setShoppingUrl(null));\n    dispatch(setOriginalPrice(null));\n    dispatch(setNewPrice(null));\n    dispatch(setEventCategory(null));\n    dispatch(setSalesDurationStart(null));\n    dispatch(setSalesDurationEnd(null));\n  }; //message에 들어갈 함수값.isLeave값이 false고 shouldConfirm이 true면? return false(페이지 이동을 막는다)\n\n\n  const handlePrompt = nextLocation => {\n    if (nextLocation.pathname === \"/CreateEvent/CreateDate\") {\n      return true;\n    }\n\n    if (!isLeave && shouldConfirm) {\n      showModal(nextLocation);\n      return false;\n    }\n\n    return true; // if ((nextLocation.pathname = \"/CreateEvent/CreateDate\")) {\n    //   return true;\n    // } else if (!isLeave && shouldConfirm) {\n    //   showModal(nextLocation);\n    //   return false;\n    // } else {\n    //   return true;\n    // }\n  };\n  /* 최초 로그인이 아닐 경우, 조건에 만족하지 않아 tour pop-up 실행되지 않는다.\n  하지만 아래 함수가 실행되면 pop-up이 뜨는 조건으로 변경된다. */\n\n\n  const handleTooltip = async () => {\n    // localStorage.setItem(\"new_user\", 1);\n    dispatch(setTooltipToggle(true));\n  };\n\n  useEffect(() => {\n    console.log(\"이즈 뉴유저 크리에이트아이템\", isNewUser);\n  }, [isNewUser]);\n  useEffect(() => {\n    const item = localStorage.getItem(\"new_user\");\n    console.log(item);\n\n    if (item === \"1\") {\n      setIsNewUser(true);\n      console.log(\"새로운 유저다!!!\");\n    } else {\n      setIsNewUser(false);\n      console.log(\"새로운 유저가 아니다!!!\");\n    }\n  }, []); // useEffect(() => {\n  //   function checkIsNewUser() {\n  //     const item = localStorage.getItem(\"new_user\");\n  //     if (item === 1) {\n  //       setIsNewUser(true);\n  //       console.log(\"이즈뉴유저\", isNewUser);\n  //     } else {\n  //       setIsNewUser(false);\n  //       console.log(\"이즈뉴유저\", isNewUser);\n  //     }\n  //     console.log(\"로컬스토리지\", item);\n  //   }\n  //   window.addEventListener(\"storage\", checkIsNewUser);\n  //   return () => {\n  //     window.removeEventListener(\"storage\", checkIsNewUser);\n  //   };\n  // }, []);\n  //isLeave값이 변경되면 useEffect가 실행되고 true일 때 아까 담아둔 lastLocation값으로 histoty.push해준다\n\n  useEffect(() => {\n    if (pointCheck) {\n      window.location.href = \"/CreditsPage\";\n    }\n\n    if (isLeave && lastLocation) {\n      return history.push(lastLocation);\n    }\n  }, [history, isLeave, lastLocation, pointCheck]);\n  useEffect(() => {\n    // 이벤트 항목 중에 1개라도 입력되었을시 shouldConfirm을 true로 바꾼다\n    // 유저가 입력하다가 다른 페이지로 이동했을때\n    // 경고창을 띄우기 위함\n    if ((username || userImage || eventimg || eventname || eventUrl || shoppingUrl || originalPrice || newPrice || durationStart || durationEnd || category) && !shouldConfirm) {\n      setShouldConfirm(true);\n    }\n  }, [username, userImage, eventimg, eventname, shoppingUrl, originalPrice, newPrice, durationStart, durationEnd, category, shouldConfirm]);\n\n  if (!email && !accessToken) {\n    window.location.href = \"/\";\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, isNewUser || tooltipToggle ? /*#__PURE__*/React.createElement(TooltipModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 41\n      }\n    }) : \"\", del && /*#__PURE__*/React.createElement(DeleteParentModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }), deleted && /*#__PURE__*/React.createElement(DeletedSnackBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(SubContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SubContainerHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, \"\\uC774\\uBCA4\\uD2B8 \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"), /*#__PURE__*/React.createElement(ImageContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      onClick: handleTooltip,\n      src: \"/images/Info.svg\",\n      alt: \"Info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(CreateEventItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Prompt, {\n      when: shouldConfirm,\n      message: handlePrompt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(WarningDialog, {\n      open: showConfirmModal,\n      contentText: \" \\uC785\\uB825\\uD558\\uC2E0 \\uC815\\uBCF4\\uB294 \\uC800\\uC7A5\\uB418\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.   \\uC815\\uB9D0\\uB85C \\uB098\\uAC00\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\",\n      cancelButtonText: \"\\uC544\\uB2C8\\uC694\",\n      confirmButtonText: \"\\uB124\",\n      onCancel: closeModal,\n      onConfirm: handleConfirmNavigationClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    })));\n  }\n}\n\nexport default withRouter(CreateEventItemPage);\nconst Container = styled.main`\n  max-width: 1400px;\n  display: flex;\n  padding: 24px;\n\n  @media (max-width: 500px) {\n    margin-top: 80px;\n    padding: 0px;\n  }\n`;\nconst SubContainer = styled.div`\n  width: 100vw;\n  margin: 1.5% 4% 0 30px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  /* background-color: gray; */\n  @media (max-width: 500px) {\n    margin: 0px;\n  }\n`;\nconst SubContainerHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-content: center;\n  margin-bottom: 50px;\n  padding-right: 20px;\n  @media (max-width: 500px) {\n    padding-right: 30px;\n    margin-left: 20px;\n    margin-bottom: 30px;\n  }\n`;\nconst Title = styled.div`\n  font-style: normal;\n  font-weight: 300;\n  font-size: 34px;\n  color: #96a9cf;\n  white-space: nowrap;\n  margin-bottom: 9px;\n  padding-right: 0px;\n  @media (max-width: 500px) {\n    font-size: 24px;\n  }\n`;\nconst ImageContainer = styled.div`\n  margin-bottom: 10px;\n  align-self: flex-end;\n  justify-content: flex-end;\n\n  @media (max-width: 500px) {\n  }\n\n  img {\n    cursor: pointer;\n    padding-right: 9px;\n    margin-top: -11px;\n    @media (max-width: 500px) {\n      font-size: 28px;\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/CreateEvent/CreateEventItemPage.js"],"names":["React","useState","useEffect","useContext","Prompt","WarningDialog","styled","useSelector","useDispatch","CreateEventItem","CreateEventDate","TooltipModal","DeleteParentModal","DeletedSnackBar","useMediaQuery","setTooltipToggle","setUsername","setEventName","setEventUrl","setShoppingUrl","setOriginalPrice","setNewPrice","setUserImage","setEventImg","setEventCategory","setSalesDurationStart","setSalesDurationEnd","deleteProfileImg","deleteEventImg","NewUserContext","Loading","CreateEventItemPage","history","isMobile","query","email","localStorage","getItem","accessToken","tooltipToggle","store","toggleReducer","del","deleteReducer","deleted","confirmDeleteReducer","username","usernameReducer","userImage","profileimgReducer","eventname","eventnameReducer","eventimg","eventimgReducer","eventUrl","eventurlReducer","shoppingUrl","shoppingurlReducer","originalPrice","originalpriceReducer","newPrice","newpriceReducer","durationStart","durationStartReducer","durationEnd","durationEndReducer","category","eventcategoryReducer","pointCheck","checkPointReducer","shouldConfirm","setShouldConfirm","isLeave","setIsLeave","lastLocation","setLastLocation","showConfirmModal","setShowConfirmModal","isNewUser","setIsNewUser","dispatch","showModal","location","closeModal","handleConfirmNavigationClick","handlePrompt","nextLocation","pathname","handleTooltip","console","log","item","window","href","push","withRouter","Container","main","SubContainer","div","SubContainerHeader","Title","ImageContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,gBALF,EAMEC,WANF,EAOEC,YAPF,EAQEC,WARF,EASEC,gBATF,EAUEC,qBAVF,EAWEC,mBAXF,EAYEC,gBAZF,EAaEC,cAbF,QAcO,+BAdP;AAeA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,SAASC,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA0C;AACxC,QAAMC,QAAQ,GAAGnB,aAAa,CAAC;AAC7BoB,IAAAA,KAAK,EAAE;AADsB,GAAD,CAA9B;AAIA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,WAAW,GAAGF,YAAY,CAACC,OAAb,CAAqB,cAArB,CAApB,CANwC,CAOxC;;AAEA,QAAME,aAAa,GAAGhC,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACC,aAAhB,CAAjC;AACA,QAAMC,GAAG,GAAGnC,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACG,aAAhB,CAAvB;AACA,QAAMC,OAAO,GAAGrC,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACK,oBAAhB,CAA3B;AAEA,QAAMC,QAAQ,GAAGvC,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACO,eAAhB,CAA5B;AACA,QAAMC,SAAS,GAAGzC,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACS,iBAAhB,CAA7B;AACA,QAAMC,SAAS,GAAG3C,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACW,gBAAhB,CAA7B;AACA,QAAMC,QAAQ,GAAG7C,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACa,eAAhB,CAA5B;AACA,QAAMC,QAAQ,GAAG/C,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACe,eAAhB,CAA5B;AACA,QAAMC,WAAW,GAAGjD,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACiB,kBAAhB,CAA/B;AACA,QAAMC,aAAa,GAAGnD,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACmB,oBAAhB,CAAjC;AACA,QAAMC,QAAQ,GAAGrD,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACqB,eAAhB,CAA5B;AACA,QAAMC,aAAa,GAAGvD,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACuB,oBAAhB,CAAjC;AACA,QAAMC,WAAW,GAAGzD,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAACyB,kBAAhB,CAA/B;AACA,QAAMC,QAAQ,GAAG3D,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAAC2B,oBAAhB,CAA5B;AAEA,QAAMC,UAAU,GAAG7D,WAAW,CAACiC,KAAK,IAAIA,KAAK,CAAC6B,iBAAhB,CAA9B,CAzBwC,CA0BxC;;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCtE,QAAQ,CAAC,KAAD,CAAlD,CA3BwC,CA4BxC;;AACA,QAAM,CAACuE,OAAD,EAAUC,UAAV,IAAwBxE,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACyE,YAAD,EAAeC,eAAf,IAAkC1E,QAAQ,EAAhD;AAEA,QAAM,CAAC2E,gBAAD,EAAmBC,mBAAnB,IAA0C5E,QAAQ,CAAC,KAAD,CAAxD;AAEA,QAAM;AAAE6E,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8B5E,UAAU,CAAC0B,cAAD,CAA9C;AAEA,QAAMmD,QAAQ,GAAGxE,WAAW,EAA5B;;AAEA,QAAMyE,SAAS,GAAGC,QAAQ,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAF,IAAAA,eAAe,CAACO,QAAD,CAAf;AACD,GAZD,CAtCwC,CAoDxC;;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvBN,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAFD,CArDwC,CAyDxC;;;AACA,QAAMO,4BAA4B,GAAG,MAAM;AACzCP,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAJ,IAAAA,UAAU,CAAC,IAAD,CAAV,CAFyC,CAIzC;;AACAO,IAAAA,QAAQ,CAAC1D,YAAY,CAAC,IAAD,CAAb,CAAR;AACA0D,IAAAA,QAAQ,CAACzD,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAyD,IAAAA,QAAQ,CAAChE,WAAW,CAAC,IAAD,CAAZ,CAAR;AACAgE,IAAAA,QAAQ,CAAC/D,YAAY,CAAC,IAAD,CAAb,CAAR;AACA+D,IAAAA,QAAQ,CAAC9D,WAAW,CAAC,IAAD,CAAZ,CAAR;AACA8D,IAAAA,QAAQ,CAAC7D,cAAc,CAAC,IAAD,CAAf,CAAR;AACA6D,IAAAA,QAAQ,CAAC5D,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACA4D,IAAAA,QAAQ,CAAC3D,WAAW,CAAC,IAAD,CAAZ,CAAR;AACA2D,IAAAA,QAAQ,CAACxD,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACAwD,IAAAA,QAAQ,CAACvD,qBAAqB,CAAC,IAAD,CAAtB,CAAR;AACAuD,IAAAA,QAAQ,CAACtD,mBAAmB,CAAC,IAAD,CAApB,CAAR;AACD,GAhBD,CA1DwC,CA4ExC;;;AACA,QAAM2D,YAAY,GAAGC,YAAY,IAAI;AACnC,QAAIA,YAAY,CAACC,QAAb,KAA0B,yBAA9B,EAAyD;AACvD,aAAO,IAAP;AACD;;AACD,QAAI,CAACf,OAAD,IAAYF,aAAhB,EAA+B;AAC7BW,MAAAA,SAAS,CAACK,YAAD,CAAT;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP,CARmC,CAUnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAlBD;AAoBA;;;;AAEA,QAAME,aAAa,GAAG,YAAY;AAChC;AACAR,IAAAA,QAAQ,CAACjE,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACD,GAHD;;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACduF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BZ,SAA/B;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIA5E,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyF,IAAI,GAAGvD,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAb;AACAoD,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AACA,QAAIA,IAAI,KAAK,GAAb,EAAkB;AAChBZ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAHD,MAGO;AACLX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,GAVQ,EAUN,EAVM,CAAT,CA5GwC,CAwHxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACAxF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkE,UAAJ,EAAgB;AACdwB,MAAAA,MAAM,CAACV,QAAP,CAAgBW,IAAhB,GAAuB,cAAvB;AACD;;AACD,QAAIrB,OAAO,IAAIE,YAAf,EAA6B;AAC3B,aAAO1C,OAAO,CAAC8D,IAAR,CAAapB,YAAb,CAAP;AACD;AACF,GAPQ,EAON,CAAC1C,OAAD,EAAUwC,OAAV,EAAmBE,YAAnB,EAAiCN,UAAjC,CAPM,CAAT;AASAlE,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA,QACE,CAAC4C,QAAQ,IACPE,SADD,IAECI,QAFD,IAGCF,SAHD,IAICI,QAJD,IAKCE,WALD,IAMCE,aAND,IAOCE,QAPD,IAQCE,aARD,IASCE,WATD,IAUCE,QAVF,KAWA,CAACI,aAZH,EAaE;AACAC,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,GApBQ,EAoBN,CACDzB,QADC,EAEDE,SAFC,EAGDI,QAHC,EAIDF,SAJC,EAKDM,WALC,EAMDE,aANC,EAODE,QAPC,EAQDE,aARC,EASDE,WATC,EAUDE,QAVC,EAWDI,aAXC,CApBM,CAAT;;AAkCA,MAAI,CAACnC,KAAD,IAAU,CAACG,WAAf,EAA4B;AAC1BsD,IAAAA,MAAM,CAACV,QAAP,CAAgBW,IAAhB,GAAuB,GAAvB;AACD,GAFD,MAEO;AACL,wBACE,uDACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,SAAS,IAAIvC,aAAb,gBAA6B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,GAAgD,EADnD,EAEGG,GAAG,iBAAI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV,EAGGE,OAAO,iBAAI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHd,eAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFADF,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE4C,aADX;AAEE,MAAA,GAAG,EAAC,kBAFN;AAGE,MAAA,GAAG,EAAC,MAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,eAWE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAJF,eAiBE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAElB,aAAd;AAA6B,MAAA,OAAO,EAAEe,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,eAkBE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAET,gBADR;AAEE,MAAA,WAAW,EAAC,kKAFd;AAIE,MAAA,gBAAgB,EAAC,oBAJnB;AAKE,MAAA,iBAAiB,EAAC,QALpB;AAME,MAAA,QAAQ,EAAEO,UANZ;AAOE,MAAA,SAAS,EAAEC,4BAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CADF,CADF;AAgCD;AACF;;AACD,eAAeW,UAAU,CAAChE,mBAAD,CAAzB;AAEA,MAAMiE,SAAS,GAAG1F,MAAM,CAAC2F,IAAK;;;;;;;;;CAA9B;AAWA,MAAMC,YAAY,GAAG5F,MAAM,CAAC6F,GAAI;;;;;;;;;;CAAhC;AAYA,MAAMC,kBAAkB,GAAG9F,MAAM,CAAC6F,GAAI;;;;;;;;;;;;CAAtC;AAcA,MAAME,KAAK,GAAG/F,MAAM,CAAC6F,GAAI;;;;;;;;;;;CAAzB;AAaA,MAAMG,cAAc,GAAGhG,MAAM,CAAC6F,GAAI;;;;;;;;;;;;;;;;CAAlC","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport WarningDialog from \"../../Components/modals/WarningDialog\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CreateEventItem from \"./CreateEventItem/CreateEventItem\";\nimport CreateEventDate from \"./CreateEventDate/CreateEventDate\";\nimport TooltipModal from \"../../Components/modals/TootipModal\";\nimport DeleteParentModal from \"../Order/Components/DeleteParentModal\";\nimport DeletedSnackBar from \"../Order/Components/DeletedSnackBar\";\nimport { useMediaQuery } from \"react-responsive\";\n\nimport { setTooltipToggle } from \"../../modules/TooltipModule\";\nimport {\n  setUsername,\n  setEventName,\n  setEventUrl,\n  setShoppingUrl,\n  setOriginalPrice,\n  setNewPrice,\n  setUserImage,\n  setEventImg,\n  setEventCategory,\n  setSalesDurationStart,\n  setSalesDurationEnd,\n  deleteProfileImg,\n  deleteEventImg\n} from \"../../modules/UserInputModule\";\nimport { NewUserContext } from \"../../Context/newUserContext\";\nimport Loading from \"../../Components/Loading\";\n\nfunction CreateEventItemPage({ history }) {\n  const isMobile = useMediaQuery({\n    query: \"(max-width: 500px)\"\n  });\n\n  const email = localStorage.getItem(\"email\");\n  const accessToken = localStorage.getItem(\"access_token\");\n  // const isNewUser = localStorage.getItem(\"new_user\") === \"1\";\n\n  const tooltipToggle = useSelector(store => store.toggleReducer);\n  const del = useSelector(store => store.deleteReducer);\n  const deleted = useSelector(store => store.confirmDeleteReducer);\n\n  const username = useSelector(store => store.usernameReducer);\n  const userImage = useSelector(store => store.profileimgReducer);\n  const eventname = useSelector(store => store.eventnameReducer);\n  const eventimg = useSelector(store => store.eventimgReducer);\n  const eventUrl = useSelector(store => store.eventurlReducer);\n  const shoppingUrl = useSelector(store => store.shoppingurlReducer);\n  const originalPrice = useSelector(store => store.originalpriceReducer);\n  const newPrice = useSelector(store => store.newpriceReducer);\n  const durationStart = useSelector(store => store.durationStartReducer);\n  const durationEnd = useSelector(store => store.durationEndReducer);\n  const category = useSelector(store => store.eventcategoryReducer);\n\n  const pointCheck = useSelector(store => store.checkPointReducer);\n  //무엇인가를 한번이라도 수정하고 페이지를 나가려고 하면 그때 띄울 것이다. when에 넣어줄 boolean 값\n  const [shouldConfirm, setShouldConfirm] = useState(false);\n  //isLeave값은 모달에서 나가기 버튼을 클릭했을 때 true로 변경\n  const [isLeave, setIsLeave] = useState(false);\n  const [lastLocation, setLastLocation] = useState();\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const { isNewUser, setIsNewUser } = useContext(NewUserContext);\n\n  const dispatch = useDispatch();\n\n  const showModal = location => {\n    // if (location.pathname === \"/CreateEvent/CreateDate\") {\n    //   console.log(\"1111\");\n    //   setShowConfirmModal(false);\n    //   setLastLocation(location);\n    // } else {\n    //   console.log(\"222\");\n    //   setShowConfirmModal(true);\n    //   setLastLocation(location);\n    // }\n    setShowConfirmModal(true);\n    setLastLocation(location);\n  };\n\n  //아니요 눌렀을 때 발생하는 함수\n  const closeModal = () => {\n    setShowConfirmModal(false);\n  };\n\n  //네 눌렀을 때 발생하는 함수, 모달창없어지면서 현재 창을 떠난다!\n  const handleConfirmNavigationClick = () => {\n    setShowConfirmModal(false);\n    setIsLeave(true);\n\n    // 밖으로가기 버튼을 눌렀을시 입력된 모든 정보를 리셋한다.\n    dispatch(setUserImage(null));\n    dispatch(setEventImg(null));\n    dispatch(setUsername(null));\n    dispatch(setEventName(null));\n    dispatch(setEventUrl(null));\n    dispatch(setShoppingUrl(null));\n    dispatch(setOriginalPrice(null));\n    dispatch(setNewPrice(null));\n    dispatch(setEventCategory(null));\n    dispatch(setSalesDurationStart(null));\n    dispatch(setSalesDurationEnd(null));\n  };\n\n  //message에 들어갈 함수값.isLeave값이 false고 shouldConfirm이 true면? return false(페이지 이동을 막는다)\n  const handlePrompt = nextLocation => {\n    if (nextLocation.pathname === \"/CreateEvent/CreateDate\") {\n      return true;\n    }\n    if (!isLeave && shouldConfirm) {\n      showModal(nextLocation);\n      return false;\n    }\n    return true;\n\n    // if ((nextLocation.pathname = \"/CreateEvent/CreateDate\")) {\n    //   return true;\n    // } else if (!isLeave && shouldConfirm) {\n    //   showModal(nextLocation);\n    //   return false;\n    // } else {\n    //   return true;\n    // }\n  };\n\n  /* 최초 로그인이 아닐 경우, 조건에 만족하지 않아 tour pop-up 실행되지 않는다.\n하지만 아래 함수가 실행되면 pop-up이 뜨는 조건으로 변경된다. */\n  const handleTooltip = async () => {\n    // localStorage.setItem(\"new_user\", 1);\n    dispatch(setTooltipToggle(true));\n  };\n\n  useEffect(() => {\n    console.log(\"이즈 뉴유저 크리에이트아이템\", isNewUser);\n  }, [isNewUser]);\n\n  useEffect(() => {\n    const item = localStorage.getItem(\"new_user\");\n    console.log(item);\n    if (item === \"1\") {\n      setIsNewUser(true);\n      console.log(\"새로운 유저다!!!\");\n    } else {\n      setIsNewUser(false);\n      console.log(\"새로운 유저가 아니다!!!\");\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   function checkIsNewUser() {\n  //     const item = localStorage.getItem(\"new_user\");\n  //     if (item === 1) {\n  //       setIsNewUser(true);\n  //       console.log(\"이즈뉴유저\", isNewUser);\n  //     } else {\n  //       setIsNewUser(false);\n  //       console.log(\"이즈뉴유저\", isNewUser);\n  //     }\n  //     console.log(\"로컬스토리지\", item);\n  //   }\n\n  //   window.addEventListener(\"storage\", checkIsNewUser);\n  //   return () => {\n  //     window.removeEventListener(\"storage\", checkIsNewUser);\n  //   };\n  // }, []);\n\n  //isLeave값이 변경되면 useEffect가 실행되고 true일 때 아까 담아둔 lastLocation값으로 histoty.push해준다\n  useEffect(() => {\n    if (pointCheck) {\n      window.location.href = \"/CreditsPage\";\n    }\n    if (isLeave && lastLocation) {\n      return history.push(lastLocation);\n    }\n  }, [history, isLeave, lastLocation, pointCheck]);\n\n  useEffect(() => {\n    // 이벤트 항목 중에 1개라도 입력되었을시 shouldConfirm을 true로 바꾼다\n    // 유저가 입력하다가 다른 페이지로 이동했을때\n    // 경고창을 띄우기 위함\n    if (\n      (username ||\n        userImage ||\n        eventimg ||\n        eventname ||\n        eventUrl ||\n        shoppingUrl ||\n        originalPrice ||\n        newPrice ||\n        durationStart ||\n        durationEnd ||\n        category) &&\n      !shouldConfirm\n    ) {\n      setShouldConfirm(true);\n    }\n  }, [\n    username,\n    userImage,\n    eventimg,\n    eventname,\n    shoppingUrl,\n    originalPrice,\n    newPrice,\n    durationStart,\n    durationEnd,\n    category,\n    shouldConfirm\n  ]);\n\n  if (!email && !accessToken) {\n    window.location.href = \"/\";\n  } else {\n    return (\n      <>\n        <Container>\n          {isNewUser || tooltipToggle ? <TooltipModal /> : \"\"}\n          {del && <DeleteParentModal />}\n          {deleted && <DeletedSnackBar />}\n          <SubContainer>\n            <SubContainerHeader>\n              <Title>이벤트 정보를 입력해 주세요</Title>\n              <ImageContainer>\n                <img\n                  onClick={handleTooltip}\n                  src=\"/images/Info.svg\"\n                  alt=\"Info\"\n                />\n              </ImageContainer>\n            </SubContainerHeader>\n            <CreateEventItem />\n          </SubContainer>\n          <Prompt when={shouldConfirm} message={handlePrompt} />\n          <WarningDialog\n            open={showConfirmModal}\n            contentText=\" 입력하신 정보는 저장되지 않습니다.  \n          정말로 나가시겠습니까?\"\n            cancelButtonText=\"아니요\"\n            confirmButtonText=\"네\"\n            onCancel={closeModal}\n            onConfirm={handleConfirmNavigationClick}\n          />\n        </Container>\n      </>\n    );\n  }\n}\nexport default withRouter(CreateEventItemPage);\n\nconst Container = styled.main`\n  max-width: 1400px;\n  display: flex;\n  padding: 24px;\n\n  @media (max-width: 500px) {\n    margin-top: 80px;\n    padding: 0px;\n  }\n`;\n\nconst SubContainer = styled.div`\n  width: 100vw;\n  margin: 1.5% 4% 0 30px;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  /* background-color: gray; */\n  @media (max-width: 500px) {\n    margin: 0px;\n  }\n`;\n\nconst SubContainerHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-content: center;\n  margin-bottom: 50px;\n  padding-right: 20px;\n  @media (max-width: 500px) {\n    padding-right: 30px;\n    margin-left: 20px;\n    margin-bottom: 30px;\n  }\n`;\n\nconst Title = styled.div`\n  font-style: normal;\n  font-weight: 300;\n  font-size: 34px;\n  color: #96a9cf;\n  white-space: nowrap;\n  margin-bottom: 9px;\n  padding-right: 0px;\n  @media (max-width: 500px) {\n    font-size: 24px;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 10px;\n  align-self: flex-end;\n  justify-content: flex-end;\n\n  @media (max-width: 500px) {\n  }\n\n  img {\n    cursor: pointer;\n    padding-right: 9px;\n    margin-top: -11px;\n    @media (max-width: 500px) {\n      font-size: 28px;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}