{"ast":null,"code":"var _jsxFileName = \"/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/Profile/Profile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { SnackbarContent } from \"@material-ui/core\";\nimport Visibility from \"../../Images/Visibility\";\nimport VisibilityOff from \"../../Images/VisibilityOff\";\nimport { updateUserInfo, headers, getUserInfo } from \"../../Config/urls\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ButtonModal from \"./Components/ButtonModal\";\nimport DeleteParentModal from \"../Order/Components/DeleteParentModal\";\nimport DeletedSnackBar from \"../Order/Components/DeletedSnackBar\";\n\nfunction Profile() {\n  const email = localStorage.getItem(\"email\");\n  const accessToken = localStorage.getItem(\"access_token\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [oldPw, setOldPw] = useState(\"\");\n  const [snackbar, setSnackbar] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [name, setName] = useState(false);\n  const [oldPassEye, setOldPassEye] = useState(false);\n  const [newPassEye, setNewPassEye] = useState(false);\n  const [confirmPassEye, setConfirmPassEye] = useState(false);\n  const del = useSelector(store => store.deleteReducer);\n  const deleted = useSelector(store => store.confirmDeleteReducer);\n  const [input, setInput] = useState({\n    emailValue: \"\",\n    nameValue: \"\",\n    oldPassValue: \"\",\n    newPassValue: \"\",\n    confirmPassValue: \"\"\n  });\n  const [err, setErr] = useState({\n    oldPassErr: \"\",\n    newPassErr: \"\",\n    confirmPassErr: \"\"\n  });\n  const dispatch = useDispatch();\n\n  const getUserData = async () => {\n    try {\n      const {\n        data: {\n          data,\n          success\n        }\n      } = await axios.get(getUserInfo, {\n        headers,\n        params: {\n          email,\n          token: accessToken\n        }\n      });\n      console.log(\"겟유저데이터 결과\", data);\n      setInput({ ...input,\n        emailValue: data.data.user_data.email,\n        nameValue: data.data.user_data.name\n      });\n      setDisplayName(data.data.user_data.name);\n      setOldPw(data.data.user_data.password);\n    } catch (err) {\n      console.log(\"겟유저데이터 에러 확인\", err);\n    }\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n  const {\n    emailValue,\n    nameValue,\n    oldPassValue,\n    newPassValue,\n    confirmPassValue\n  } = input;\n  const {\n    oldPassErr,\n    newPassErr,\n    confirmPassErr\n  } = err;\n  const nameData = qs.stringify({\n    email,\n    token: accessToken,\n    name: nameValue\n  });\n  const pwData = qs.stringify({\n    email,\n    token: accessToken,\n    password: confirmPassValue\n  });\n\n  const postName = async () => {\n    try {\n      const {\n        data: {\n          data,\n          success\n        }\n      } = await axios.post(updateUserInfo, nameData, {\n        headers\n      });\n      console.log(\"포스트 네임 서버 통신 결과 success\", success);\n      console.log(\"포스트 네임 서버 통신 결과 data\", data);\n    } catch (err) {\n      console.log(\"포스트 네임 에러\", err);\n    }\n  };\n\n  const postPassword = async () => {\n    await axios.post(updateUserInfo, pwData, {\n      headers\n    });\n  }; // ------Password Validation-----\n\n\n  const checkOldPw = oldPassValue === oldPw;\n  const oldPassRequire = oldPassValue.length > 7;\n  const newPassRequire = newPassValue.length > 7;\n  const confirmPassRequire = confirmPassValue.length > 7;\n  const checkPassValidation = newPassValue !== confirmPassValue;\n  const checkConfirmPass = checkPassValidation && newPassRequire && confirmPassRequire ? \"새로운 비밀번호가 일치하지 않습니다.\" : \"\"; // -------------------------------\n  // ------Name Validation------\n\n  const regName = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|.| |\\*]+$/;\n  const SCValidation = nameValue && !regName.test(nameValue) ? \"특수문자 및 숫자는 입력하실수 없습니다.\" : \"\";\n  const nameValidation = nameValue.length > 0;\n  const sameName = nameValue === displayName; // ----------------------------\n\n  const handleInput = e => {\n    // e.preventDefault();\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({ ...input,\n      [`${name}Value`]: value\n    });\n    const validator = {\n      oldPass: value.length < 8 && value.length > 0 ? \"비밀번호는 최소 8자리 이상이어야 합니다.\" : \"\",\n      newPass: value.length < 8 && value.length > 0 ? \"비밀번호는 최소 8자리 이상이어야 합니다.\" : \"\",\n      confirmPass: value.length < 8 && value.length > 0 ? \"비밀번호는 최소 8자리 이상이어야 합니다.\" : \"\"\n    };\n    setErr({ ...err,\n      [`${name}Err`]: validator[name]\n    });\n  }; // 저장버튼\n  // const handleSubmit = e => {\n  //   if (!SCValidation && !sameName) {\n  //     postName();\n  //     setSnackbar(true); //snackbar open\n  //     setTimeout(() => {\n  //       setSnackbar(false);\n  //     }, 3000);\n  //   }\n  //   if (!checkOldPw && oldPassRequire) {\n  //     e.preventDefault();\n  //     setName(true);\n  //   }\n  //   if (\n  //     checkOldPw &&\n  //     oldPassRequire &&\n  //     newPassRequire &&\n  //     confirmPassRequire &&\n  //     !checkPassValidation\n  //   ) {\n  //     e.preventDefault();\n  //     setModal(true);\n  //   }\n  // };\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!SCValidation && !sameName) {\n      postName();\n      getUserData();\n      setSnackbar(true); //snackbar open\n\n      setTimeout(() => {\n        setSnackbar(false);\n      }, 3000);\n    }\n\n    if (!checkOldPw && oldPassRequire) {\n      setName(true);\n    }\n\n    if (checkOldPw && oldPassRequire && newPassRequire && confirmPassRequire && !checkPassValidation) {\n      setModal(true);\n    }\n  }; //button Validation\n\n\n  const isTyped = nameValidation && !sameName && !confirmPassValue && !newPassValue && !oldPassValue && regName.test(nameValue) || oldPassRequire && newPassRequire && confirmPassRequire && !checkPassValidation && regName.test(nameValue); //비밀번호 텍스트 또는 암호화\n\n  const oldEyeIcon = () => {\n    setOldPassEye(!oldPassEye);\n  };\n\n  const newEyeIcon = () => {\n    setNewPassEye(!newPassEye);\n  };\n\n  const confirmEyeIcon = () => {\n    setConfirmPassEye(!confirmPassEye);\n  }; // 로그아웃\n\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"new_user\");\n    localStorage.removeItem(\"toggle\");\n    window.location.href = \"/\";\n  };\n\n  if (!accessToken && !email) {\n    window.location.href = \"/\";\n  } else {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 7\n      }\n    }, modal ? /*#__PURE__*/React.createElement(ButtonModal, {\n      postPassword: postPassword,\n      open: modal,\n      setOpen: setModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    }) : \"\", del && /*#__PURE__*/React.createElement(DeleteParentModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }), deleted && /*#__PURE__*/React.createElement(DeletedSnackBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ProfilePageWrap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TitleContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, \"\\uD504\\uB85C\\uD544\"), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: handleLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, \"\\uB85C\\uADF8\\uC544\\uC6C3\")), /*#__PURE__*/React.createElement(NameContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, displayName)), /*#__PURE__*/React.createElement(InputContainer, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(InfoContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InfoTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, \"\\uC774\\uB984 \\uBCC0\\uACBD\"), /*#__PURE__*/React.createElement(InfoInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(EmailInput, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      disabled: true,\n      type: \"text\",\n      onChange: handleInput,\n      name: \"email\",\n      value: emailValue,\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(NameInput, {\n      isValid: SCValidation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: handleInput,\n      name: \"name\",\n      value: nameValue,\n      placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ErrIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, SCValidation))))), /*#__PURE__*/React.createElement(ButtonContainer, {\n      disabled: !isTyped,\n      isValid: isTyped,\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 13\n      }\n    }, \"\\uC800\\uC7A5\")), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      },\n      open: snackbar,\n      autoHideDuration: 3000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SnackbarContent, {\n      message: `프로필 수정이 완료 되었습니다.`,\n      style: {\n        backgroundColor: \"#757575\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }\n    }))));\n  }\n}\n\nexport default withRouter(Profile);\nconst OldPassVisible = styled.div`\n  right: 5px;\n  top: 25px;\n  position: absolute;\n`;\nconst NewPassVisible = styled.div`\n  right: 5px;\n  top: 25px;\n  position: absolute;\n`;\nconst ConfirmPassVisible = styled.div`\n  right: 5px;\n  top: 25px;\n  position: absolute;\n`;\nconst Container = styled.main`\n  min-height: 700px;\n  min-width: 1400px;\n  display: flex;\n  padding: 24px;\n  @media (max-width: 500px) {\n    min-width: 300px;\n    padding: 0px;\n  }\n`;\nconst ProfilePageWrap = styled.section`\n  width: 100%;\n  margin: 20px 0px 0px 0px;\n  @media (max-width: 500px) {\n    margin: 80px 0px 0px 0px;\n  }\n`;\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media (max-width: 500px) {\n    margin-bottom: 20px;\n  }\n  span {\n    font-weight: 300;\n    font-size: 34px;\n    color: #96a9cf;\n    @media (max-width: 500px) {\n      font-size: 28px;\n      margin-left: 20px;\n    }\n  }\n\n  div {\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 700;\n    letter-spacing: 0.08em;\n    text-align: left;\n    white-space: nowrap;\n    cursor: pointer;\n    @media (max-width: 500px) {\n      margin-right: 20px;\n    }\n  }\n`;\nconst NameContainer = styled.div`\n  margin: 50px 0px 0px 120px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 300px;\n  @media (max-width: 500px) {\n    width: 100%;\n    margin: 100px 0px 0px 0px;\n    display: flex;\n    justify-content: center;\n  }\n  span {\n    font-weight: bold;\n    font-size: 50px;\n    color: #96a9cf;\n    line-height: 130%;\n    @media (max-width: 500px) {\n      font-size: 42px;\n    }\n  }\n`;\nconst InputContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 100px;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 500px) {\n    margin-top: 40px;\n  }\n`;\nconst InfoContainer = styled.div``;\nconst InfoTitle = styled.div``;\nconst InfoInput = styled.div`\n  ${({\n  theme\n}) => theme.flex(\"\", \"\", \"column\")}\n`;\nconst EmailInput = styled.div`\n  input {\n    height: 40px;\n    width: 350px;\n    background: #f5f5f5;\n    border: ${({\n  isValid\n}) => isValid ? \"1px solid red \" : \"  0.5px solid #bdbdbd \"};\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\nconst NameInput = styled.div`\n  input {\n    height: 40px;\n    width: 350px;\n    background: #ffffff;\n    border: ${({\n  isValid\n}) => isValid ? \"1px solid red \" : \"  0.5px solid #bdbdbd \"};\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\nconst PasswordContainer = styled.div`\n  margin-left: 80px;\n`;\nconst PasswordTitle = styled.div``;\nconst PasswordInput = styled.div`\n  ${({\n  theme\n}) => theme.flex(\"\", \"\", \"column\")}\n`;\nconst OldPassInput = styled.div`\n  position: relative;\n  input {\n    height: 40px;\n    width: 350px;\n    background: #ffffff;\n    border: ${({\n  isValid\n}) => isValid ? \"1px solid red \" : \" 0.5px solid #bdbdbd \"};\n    box-sizing: border-box;\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\nconst NewPassInput = styled.div`\n  position: relative;\n  input {\n    height: 40px;\n    width: 350px;\n    background: #ffffff;\n    border: ${({\n  isValid\n}) => isValid ? \"1px solid red \" : \" 0.5px solid #bdbdbd \"};\n    box-sizing: border-box;\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\nconst ConfirmPassInput = styled.div`\n  position: relative;\n  input {\n    height: 40px;\n    width: 350px;\n    background: #ffffff;\n    border: ${({\n  isValid\n}) => isValid ? \"1px solid red \" : \" 0.5px solid #bdbdbd \"};\n    box-sizing: border-box;\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\nconst ButtonContainer = styled.button`\n  margin-left: 190px;\n  margin-top: 100px;\n  height: 36px;\n  width: 156px;\n  font-weight: bold;\n  font-size: 14px;\n  box-shadow: 0px 2px 4px rgba(66, 66, 66, 0.14),\n    0px 3px 4px rgba(66, 66, 66, 0.12), 0px 1px 5px rgba(66, 66, 66, 0.2);\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n  background-color: ${({\n  isValid\n}) => isValid ? \"#212121\" : \"#bdbdbd\"};\n  align-self: flex-end;\n  margin-top: 200px;\n  margin-right: 100px;\n  @media (max-width: 500px) {\n    margin-top: 50px;\n  }\n`;\nconst ErrIndicator = styled.div`\n  margin: 1px 0 0 8px;\n  span {\n    position: absolute;\n    font-weight: bold;\n    font-size: 13px;\n    color: #e64a19;\n  }\n`;","map":{"version":3,"sources":["/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Pages/Profile/Profile.js"],"names":["React","useState","useEffect","styled","Snackbar","SnackbarContent","Visibility","VisibilityOff","updateUserInfo","headers","getUserInfo","axios","qs","withRouter","useSelector","useDispatch","ButtonModal","DeleteParentModal","DeletedSnackBar","Profile","email","localStorage","getItem","accessToken","displayName","setDisplayName","oldPw","setOldPw","snackbar","setSnackbar","modal","setModal","name","setName","oldPassEye","setOldPassEye","newPassEye","setNewPassEye","confirmPassEye","setConfirmPassEye","del","store","deleteReducer","deleted","confirmDeleteReducer","input","setInput","emailValue","nameValue","oldPassValue","newPassValue","confirmPassValue","err","setErr","oldPassErr","newPassErr","confirmPassErr","dispatch","getUserData","data","success","get","params","token","console","log","user_data","password","nameData","stringify","pwData","postName","post","postPassword","checkOldPw","oldPassRequire","length","newPassRequire","confirmPassRequire","checkPassValidation","checkConfirmPass","regName","SCValidation","test","nameValidation","sameName","handleInput","e","value","target","validator","oldPass","newPass","confirmPass","handleSubmit","preventDefault","setTimeout","isTyped","oldEyeIcon","newEyeIcon","confirmEyeIcon","handleLogout","removeItem","window","location","href","vertical","horizontal","backgroundColor","OldPassVisible","div","NewPassVisible","ConfirmPassVisible","Container","main","ProfilePageWrap","section","TitleContainer","NameContainer","InputContainer","form","InfoContainer","InfoTitle","InfoInput","theme","flex","EmailInput","isValid","NameInput","PasswordContainer","PasswordTitle","PasswordInput","OldPassInput","NewPassInput","ConfirmPassInput","ButtonContainer","button","ErrIndicator"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { SnackbarContent } from \"@material-ui/core\";\nimport Visibility from \"../../Images/Visibility\";\nimport VisibilityOff from \"../../Images/VisibilityOff\";\nimport { updateUserInfo, headers, getUserInfo } from \"../../Config/urls\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { withRouter } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ButtonModal from \"./Components/ButtonModal\";\nimport DeleteParentModal from \"../Order/Components/DeleteParentModal\";\nimport DeletedSnackBar from \"../Order/Components/DeletedSnackBar\";\n\nfunction Profile() {\n  const email = localStorage.getItem(\"email\");\n  const accessToken = localStorage.getItem(\"access_token\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [oldPw, setOldPw] = useState(\"\");\n  const [snackbar, setSnackbar] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [name, setName] = useState(false);\n  const [oldPassEye, setOldPassEye] = useState(false);\n  const [newPassEye, setNewPassEye] = useState(false);\n  const [confirmPassEye, setConfirmPassEye] = useState(false);\n  const del = useSelector(store => store.deleteReducer);\n  const deleted = useSelector(store => store.confirmDeleteReducer);\n  const [input, setInput] = useState({\n    emailValue: \"\",\n    nameValue: \"\",\n    oldPassValue: \"\",\n    newPassValue: \"\",\n    confirmPassValue: \"\"\n  });\n  const [err, setErr] = useState({\n    oldPassErr: \"\",\n    newPassErr: \"\",\n    confirmPassErr: \"\"\n  });\n\n  const dispatch = useDispatch();\n\n  const getUserData = async () => {\n    try {\n      const {\n        data: { data, success }\n      } = await axios.get(getUserInfo, {\n        headers,\n        params: {\n          email,\n          token: accessToken\n        }\n      });\n      console.log(\"겟유저데이터 결과\", data);\n      setInput({\n        ...input,\n        emailValue: data.data.user_data.email,\n        nameValue: data.data.user_data.name\n      });\n\n      setDisplayName(data.data.user_data.name);\n      setOldPw(data.data.user_data.password);\n    } catch (err) {\n      console.log(\"겟유저데이터 에러 확인\", err);\n    }\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  const {\n    emailValue,\n    nameValue,\n    oldPassValue,\n    newPassValue,\n    confirmPassValue\n  } = input;\n\n  const { oldPassErr, newPassErr, confirmPassErr } = err;\n\n  const nameData = qs.stringify({\n    email,\n    token: accessToken,\n    name: nameValue\n  });\n\n  const pwData = qs.stringify({\n    email,\n    token: accessToken,\n    password: confirmPassValue\n  });\n\n  const postName = async () => {\n    try {\n      const {\n        data: { data, success }\n      } = await axios.post(updateUserInfo, nameData, {\n        headers\n      });\n      console.log(\"포스트 네임 서버 통신 결과 success\", success);\n      console.log(\"포스트 네임 서버 통신 결과 data\", data);\n    } catch (err) {\n      console.log(\"포스트 네임 에러\", err);\n    }\n  };\n\n  const postPassword = async () => {\n    await axios.post(updateUserInfo, pwData, {\n      headers\n    });\n  };\n\n  // ------Password Validation-----\n  const checkOldPw = oldPassValue === oldPw;\n  const oldPassRequire = oldPassValue.length > 7;\n  const newPassRequire = newPassValue.length > 7;\n  const confirmPassRequire = confirmPassValue.length > 7;\n  const checkPassValidation = newPassValue !== confirmPassValue;\n  const checkConfirmPass =\n    checkPassValidation && newPassRequire && confirmPassRequire\n      ? \"새로운 비밀번호가 일치하지 않습니다.\"\n      : \"\";\n  // -------------------------------\n\n  // ------Name Validation------\n  const regName = /^[ㄱ-ㅎ|가-힣|a-z|A-Z|.| |\\*]+$/;\n  const SCValidation =\n    nameValue && !regName.test(nameValue)\n      ? \"특수문자 및 숫자는 입력하실수 없습니다.\"\n      : \"\";\n  const nameValidation = nameValue.length > 0;\n  const sameName = nameValue === displayName;\n  // ----------------------------\n\n  const handleInput = e => {\n    // e.preventDefault();\n    const { name, value } = e.target;\n    setInput({\n      ...input,\n      [`${name}Value`]: value\n    });\n\n    const validator = {\n      oldPass:\n        value.length < 8 && value.length > 0\n          ? \"비밀번호는 최소 8자리 이상이어야 합니다.\"\n          : \"\",\n      newPass:\n        value.length < 8 && value.length > 0\n          ? \"비밀번호는 최소 8자리 이상이어야 합니다.\"\n          : \"\",\n      confirmPass:\n        value.length < 8 && value.length > 0\n          ? \"비밀번호는 최소 8자리 이상이어야 합니다.\"\n          : \"\"\n    };\n\n    setErr({\n      ...err,\n      [`${name}Err`]: validator[name]\n    });\n  };\n\n  // 저장버튼\n  // const handleSubmit = e => {\n  //   if (!SCValidation && !sameName) {\n  //     postName();\n  //     setSnackbar(true); //snackbar open\n  //     setTimeout(() => {\n  //       setSnackbar(false);\n  //     }, 3000);\n  //   }\n  //   if (!checkOldPw && oldPassRequire) {\n  //     e.preventDefault();\n  //     setName(true);\n  //   }\n  //   if (\n  //     checkOldPw &&\n  //     oldPassRequire &&\n  //     newPassRequire &&\n  //     confirmPassRequire &&\n  //     !checkPassValidation\n  //   ) {\n  //     e.preventDefault();\n  //     setModal(true);\n  //   }\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!SCValidation && !sameName) {\n      postName();\n      getUserData();\n      setSnackbar(true); //snackbar open\n      setTimeout(() => {\n        setSnackbar(false);\n      }, 3000);\n    }\n    if (!checkOldPw && oldPassRequire) {\n      setName(true);\n    }\n    if (\n      checkOldPw &&\n      oldPassRequire &&\n      newPassRequire &&\n      confirmPassRequire &&\n      !checkPassValidation\n    ) {\n      setModal(true);\n    }\n  };\n\n  //button Validation\n  const isTyped =\n    (nameValidation &&\n      !sameName &&\n      !confirmPassValue &&\n      !newPassValue &&\n      !oldPassValue &&\n      regName.test(nameValue)) ||\n    (oldPassRequire &&\n      newPassRequire &&\n      confirmPassRequire &&\n      !checkPassValidation &&\n      regName.test(nameValue));\n\n  //비밀번호 텍스트 또는 암호화\n  const oldEyeIcon = () => {\n    setOldPassEye(!oldPassEye);\n  };\n\n  const newEyeIcon = () => {\n    setNewPassEye(!newPassEye);\n  };\n\n  const confirmEyeIcon = () => {\n    setConfirmPassEye(!confirmPassEye);\n  };\n\n  // 로그아웃\n  const handleLogout = () => {\n    localStorage.removeItem(\"access_token\");\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"new_user\");\n    localStorage.removeItem(\"toggle\");\n    window.location.href = \"/\";\n  };\n\n  if (!accessToken && !email) {\n    window.location.href = \"/\";\n  } else {\n    return (\n      <Container>\n        {modal ? (\n          <ButtonModal\n            postPassword={postPassword}\n            open={modal}\n            setOpen={setModal}\n          />\n        ) : (\n          \"\"\n        )}\n        {del && <DeleteParentModal />}\n        {deleted && <DeletedSnackBar />}\n\n        <ProfilePageWrap>\n          <TitleContainer>\n            <span>프로필</span>\n            <div onClick={handleLogout}>로그아웃</div>\n          </TitleContainer>\n          <NameContainer>\n            <span>{displayName}</span>\n          </NameContainer>\n          <InputContainer onSubmit={handleSubmit}>\n            <InfoContainer>\n              <InfoTitle>이름 변경</InfoTitle>\n              <InfoInput>\n                <EmailInput>\n                  <input\n                    disabled\n                    type=\"text\"\n                    onChange={handleInput}\n                    name=\"email\"\n                    value={emailValue}\n                    placeholder=\"이메일을 입력해 주세요.\"\n                  />\n                </EmailInput>\n                <NameInput isValid={SCValidation}>\n                  <input\n                    type=\"text\"\n                    onChange={handleInput}\n                    name=\"name\"\n                    value={nameValue}\n                    placeholder=\"이름을 입력해 주세요.\"\n                  />\n\n                  <ErrIndicator>\n                    <span>{SCValidation}</span>\n                  </ErrIndicator>\n                </NameInput>\n              </InfoInput>\n            </InfoContainer>\n            {/* <PasswordContainer>\n              <PasswordTitle>비밀번호 변경</PasswordTitle>\n              <PasswordInput>\n                <OldPassInput isValid={oldPassErr || name}>\n                  <input\n                    type={oldPassEye ? \"text\" : \"password\"}\n                    onChange={e => handleInput(e)}\n                    name=\"oldPass\"\n                    value={oldPassValue}\n                    placeholder=\"기존 비밀번호를 입력해주세요.\"\n                  />\n                  <ErrIndicator>\n                    <span>{name ? \"\" : oldPassErr}</span>\n                  </ErrIndicator>\n                  <ErrIndicator>\n                    {name && <span>비밀번호가 일치하지 않습니다.</span>}\n                  </ErrIndicator>\n                  {oldPassValue && oldPassEye && (\n                    <OldPassVisible onClick={oldEyeIcon}>\n                      <Visibility />\n                    </OldPassVisible>\n                  )}\n                  {oldPassValue && !oldPassEye && (\n                    <OldPassVisible onClick={oldEyeIcon}>\n                      <VisibilityOff />\n                    </OldPassVisible>\n                  )}\n                </OldPassInput>\n                <NewPassInput isValid={newPassErr}>\n                  <input\n                    type={newPassEye ? \"text\" : \"password\"}\n                    onChange={handleInput}\n                    name=\"newPass\"\n                    value={newPassValue}\n                    placeholder=\"새로운 비밀번호를 입력해주세요.\"\n                  />\n                  <ErrIndicator>\n                    <span>{newPassErr}</span>\n                  </ErrIndicator>\n                  {newPassValue && newPassEye && (\n                    <NewPassVisible onClick={newEyeIcon}>\n                      <Visibility />\n                    </NewPassVisible>\n                  )}\n                  {newPassValue && !newPassEye && (\n                    <NewPassVisible onClick={newEyeIcon}>\n                      <VisibilityOff />\n                    </NewPassVisible>\n                  )}\n                </NewPassInput>\n                <ConfirmPassInput isValid={confirmPassErr || checkConfirmPass}>\n                  <input\n                    type={confirmPassEye ? \"text\" : \"password\"}\n                    onChange={handleInput}\n                    name=\"confirmPass\"\n                    value={confirmPassValue}\n                    placeholder=\"새로운 비밀번호를 다시 입력해주세요.\"\n                  />\n                  <ErrIndicator>\n                    <span>{confirmPassErr || checkConfirmPass}</span>\n                  </ErrIndicator>\n                  {confirmPassValue && confirmPassEye && (\n                    <ConfirmPassVisible onClick={confirmEyeIcon}>\n                      <Visibility />\n                    </ConfirmPassVisible>\n                  )}\n                  {confirmPassValue && !confirmPassEye && (\n                    <ConfirmPassVisible onClick={confirmEyeIcon}>\n                      <VisibilityOff />\n                    </ConfirmPassVisible>\n                  )}\n                </ConfirmPassInput>\n              </PasswordInput>\n              // <ButtonContainer\n              //   disabled={!isTyped}\n              //   isValid={isTyped}\n              //   onClick={handleSubmit}\n              // >\n              //   저장\n              // </ButtonContainer>\n            </PasswordContainer> */}\n            <ButtonContainer\n              disabled={!isTyped}\n              isValid={isTyped}\n              onClick={handleSubmit}\n            >\n              저장\n            </ButtonContainer>\n          </InputContainer>\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"right\"\n            }}\n            open={snackbar}\n            autoHideDuration={3000}\n          >\n            <SnackbarContent\n              message={`프로필 수정이 완료 되었습니다.`}\n              style={{\n                backgroundColor: \"#757575\"\n              }}\n            />\n          </Snackbar>\n        </ProfilePageWrap>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(Profile);\n\nconst OldPassVisible = styled.div`\n  right: 5px;\n  top: 25px;\n  position: absolute;\n`;\n\nconst NewPassVisible = styled.div`\n  right: 5px;\n  top: 25px;\n  position: absolute;\n`;\n\nconst ConfirmPassVisible = styled.div`\n  right: 5px;\n  top: 25px;\n  position: absolute;\n`;\n\nconst Container = styled.main`\n  min-height: 700px;\n  min-width: 1400px;\n  display: flex;\n  padding: 24px;\n  @media (max-width: 500px) {\n    min-width: 300px;\n    padding: 0px;\n  }\n`;\n\nconst ProfilePageWrap = styled.section`\n  width: 100%;\n  margin: 20px 0px 0px 0px;\n  @media (max-width: 500px) {\n    margin: 80px 0px 0px 0px;\n  }\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media (max-width: 500px) {\n    margin-bottom: 20px;\n  }\n  span {\n    font-weight: 300;\n    font-size: 34px;\n    color: #96a9cf;\n    @media (max-width: 500px) {\n      font-size: 28px;\n      margin-left: 20px;\n    }\n  }\n\n  div {\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 700;\n    letter-spacing: 0.08em;\n    text-align: left;\n    white-space: nowrap;\n    cursor: pointer;\n    @media (max-width: 500px) {\n      margin-right: 20px;\n    }\n  }\n`;\n\nconst NameContainer = styled.div`\n  margin: 50px 0px 0px 120px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 300px;\n  @media (max-width: 500px) {\n    width: 100%;\n    margin: 100px 0px 0px 0px;\n    display: flex;\n    justify-content: center;\n  }\n  span {\n    font-weight: bold;\n    font-size: 50px;\n    color: #96a9cf;\n    line-height: 130%;\n    @media (max-width: 500px) {\n      font-size: 42px;\n    }\n  }\n`;\n\nconst InputContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 100px;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 500px) {\n    margin-top: 40px;\n  }\n`;\n\nconst InfoContainer = styled.div``;\n\nconst InfoTitle = styled.div``;\n\nconst InfoInput = styled.div`\n  ${({ theme }) => theme.flex(\"\", \"\", \"column\")}\n`;\n\nconst EmailInput = styled.div`\n  input {\n    height: 40px;\n    width: 350px;\n    background: #f5f5f5;\n    border: ${({ isValid }) =>\n      isValid ? \"1px solid red \" : \"  0.5px solid #bdbdbd \"};\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\n\nconst NameInput = styled.div`\n  input {\n    height: 40px;\n    width: 350px;\n    background: #ffffff;\n    border: ${({ isValid }) =>\n      isValid ? \"1px solid red \" : \"  0.5px solid #bdbdbd \"};\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\n\nconst PasswordContainer = styled.div`\n  margin-left: 80px;\n`;\n\nconst PasswordTitle = styled.div``;\n\nconst PasswordInput = styled.div`\n  ${({ theme }) => theme.flex(\"\", \"\", \"column\")}\n`;\n\nconst OldPassInput = styled.div`\n  position: relative;\n  input {\n    height: 40px;\n    width: 350px;\n    background: #ffffff;\n    border: ${({ isValid }) =>\n      isValid ? \"1px solid red \" : \" 0.5px solid #bdbdbd \"};\n    box-sizing: border-box;\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\n\nconst NewPassInput = styled.div`\n  position: relative;\n  input {\n    height: 40px;\n    width: 350px;\n    background: #ffffff;\n    border: ${({ isValid }) =>\n      isValid ? \"1px solid red \" : \" 0.5px solid #bdbdbd \"};\n    box-sizing: border-box;\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\n\nconst ConfirmPassInput = styled.div`\n  position: relative;\n  input {\n    height: 40px;\n    width: 350px;\n    background: #ffffff;\n    border: ${({ isValid }) =>\n      isValid ? \"1px solid red \" : \" 0.5px solid #bdbdbd \"};\n    box-sizing: border-box;\n    border-radius: 6px;\n    margin-top: 30px;\n    padding: 14px 0 16px 13px;\n    font-size: 16px;\n  }\n`;\n\nconst ButtonContainer = styled.button`\n  margin-left: 190px;\n  margin-top: 100px;\n  height: 36px;\n  width: 156px;\n  font-weight: bold;\n  font-size: 14px;\n  box-shadow: 0px 2px 4px rgba(66, 66, 66, 0.14),\n    0px 3px 4px rgba(66, 66, 66, 0.12), 0px 1px 5px rgba(66, 66, 66, 0.2);\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n  background-color: ${({ isValid }) => (isValid ? \"#212121\" : \"#bdbdbd\")};\n  align-self: flex-end;\n  margin-top: 200px;\n  margin-right: 100px;\n  @media (max-width: 500px) {\n    margin-top: 50px;\n  }\n`;\n\nconst ErrIndicator = styled.div`\n  margin: 1px 0 0 8px;\n  span {\n    position: absolute;\n    font-weight: bold;\n    font-size: 13px;\n    color: #e64a19;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}