{"ast":null,"code":"import _regeneratorRuntime from\"/Users/merchsquare/Desktop/Kyle/sellist-partners_backup1(02.10)/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/merchsquare/Desktop/Kyle/sellist-partners_backup1(02.10)/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import{useHistory}from\"react-router-dom\";import qs from\"qs\";import{useSelector}from\"react-redux\";import{headers,buyCredit,deleteMultiCart}from\"../../Config/urls\";var EMAIL=localStorage.getItem(\"email\");// CartType: 1, 정상적으로 구매가 진행되면 포인트 차감 진행\nvar postCartCredits=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(cartDataItems){var _cartDataItems$,_cartDataItems$$,_cartDataItems$2,_cartDataItems$2$;var getCash,getCredit,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getCash=(_cartDataItems$=cartDataItems[0])===null||_cartDataItems$===void 0?void 0:(_cartDataItems$$=_cartDataItems$[0])===null||_cartDataItems$$===void 0?void 0:_cartDataItems$$.map(function(list){return list.credit_cash;});getCredit=(_cartDataItems$2=cartDataItems[0])===null||_cartDataItems$2===void 0?void 0:(_cartDataItems$2$=_cartDataItems$2[0])===null||_cartDataItems$2$===void 0?void 0:_cartDataItems$2$.map(function(list){return list.credit_amount;});data=qs.stringify({email:EMAIL,price:getCash,credit:getCredit});_context.next=5;return axios.post(buyCredit,data,{headers:headers});case 5:case\"end\":return _context.stop();}}},_callee);}));return function postCartCredits(_x){return _ref.apply(this,arguments);};}();// 정상적으로 구매가 진행되면 장바구니에 담긴 Item 삭제\nvar deleteMultiCredit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cartDataItems){var _cartDataItems$3,_cartDataItems$3$;var userCartId,convertUserId,deleteData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:userCartId=(_cartDataItems$3=cartDataItems[0])===null||_cartDataItems$3===void 0?void 0:(_cartDataItems$3$=_cartDataItems$3[0])===null||_cartDataItems$3$===void 0?void 0:_cartDataItems$3$.map(function(list){return list.cart_id;});convertUserId=String(userCartId);deleteData={email:EMAIL,cart_ids:convertUserId};_context2.next=5;return axios.delete(deleteMultiCart,{headers:headers,params:deleteData});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function deleteMultiCredit(_x2){return _ref2.apply(this,arguments);};}();// CartType:2, 정상적으로 구매가 진행되면 포인트 차감 진행\nvar postDirectBuyCredits=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(buyItem){var _buyItem$,_buyItem$2,_buyItem$3;var getCash,getCredit,cartId,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:getCash=(_buyItem$=buyItem[0])===null||_buyItem$===void 0?void 0:_buyItem$[0][\"credit_cash\"];getCredit=(_buyItem$2=buyItem[0])===null||_buyItem$2===void 0?void 0:_buyItem$2[0][\"credit_amount\"];cartId=(_buyItem$3=buyItem[0])===null||_buyItem$3===void 0?void 0:_buyItem$3[0][\"cart_id\"];data=qs.stringify({email:EMAIL,price:getCash,credit:getCredit,from_cart:1,cart_id:cartId});_context3.next=6;return axios.post(buyCredit,data,{headers:headers});case 6:case\"end\":return _context3.stop();}}},_callee3);}));return function postDirectBuyCredits(_x3){return _ref3.apply(this,arguments);};}();/* 전달 받은 cartType 숫자에 따라 결재 process가 구분된다.\n1: 장바구니에 담긴 상품을 구매할 경우 -> 개별 item의 합계를 구하고 결재를 진행한다.\n2: 바로 구매하기 버튼으로 상품을 구매할 경우 -> 최근에 담긴 store item을 확인하여 낱개 item의 결재를 진행한다.\n*/var useForm=function useForm(cartType){var history=useHistory();var cartDataItems=useSelector(function(store){return store.cartDataReducer;});var buyItem=useSelector(function(store){return store.buyCreditReducer;});var IMP=window.IMP;IMP.init(\"imp45750210\");if(cartType===1){var _cartDataItems$4,_cartDataItems$5,_cartDataItems$6,_cartDataItems$6$,_cartDataItems$7,_cartDataItems$7$;var totalPrice=(_cartDataItems$4=cartDataItems[0])===null||_cartDataItems$4===void 0?void 0:_cartDataItems$4[0].reduce(function(acc,cur){return acc+=cur.credit_cash;},0);var totalCredit=(_cartDataItems$5=cartDataItems[0])===null||_cartDataItems$5===void 0?void 0:_cartDataItems$5[0].reduce(function(acc,cur){return acc+=cur.credit_amount;},0);var cartEmail=(_cartDataItems$6=cartDataItems[0])===null||_cartDataItems$6===void 0?void 0:(_cartDataItems$6$=_cartDataItems$6[0])===null||_cartDataItems$6$===void 0?void 0:_cartDataItems$6$.map(function(list){return list.credit_user;});var cartId=(_cartDataItems$7=cartDataItems[0])===null||_cartDataItems$7===void 0?void 0:(_cartDataItems$7$=_cartDataItems$7[0])===null||_cartDataItems$7$===void 0?void 0:_cartDataItems$7$.map(function(list){return list.cart_id;});var convertCartId=String(cartId);var convertCartEmail=String(cartEmail[0]);IMP.request_pay({pg:\"kcp\",pay_method:\"card\",merchant_uid:convertCartId,name:\"\".concat(totalCredit,\" \\uD3EC\\uC778\\uD2B8\"),amount:totalPrice,buyer_email:convertCartEmail},function(rsp){if(rsp.success){var msg=\"결제가 완료되었습니다.\";msg&&history.push(\"/ThankYou\");deleteMultiCredit(cartDataItems);postCartCredits(cartDataItems);}else{var msg=\"결제에 실패하였습니다.\";msg+=\"에러내용 : \"+rsp.error_msg;}alert(msg);});}if(cartType===2){var _buyItem$4,_buyItem$5,_buyItem$6,_buyItem$7;var _totalPrice=(_buyItem$4=buyItem[0])===null||_buyItem$4===void 0?void 0:_buyItem$4[0][\"credit_cash\"];var _totalCredit=(_buyItem$5=buyItem[0])===null||_buyItem$5===void 0?void 0:_buyItem$5[0][\"credit_amount\"];var _cartEmail=(_buyItem$6=buyItem[0])===null||_buyItem$6===void 0?void 0:_buyItem$6[0][\"email\"];var _cartId=(_buyItem$7=buyItem[0])===null||_buyItem$7===void 0?void 0:_buyItem$7[0][\"cart_id\"];var _convertCartId=String(_cartId);var _convertCartEmail=String(_cartEmail);IMP.request_pay({pg:\"kcp\",pay_method:\"card\",merchant_uid:_convertCartId,name:\"\".concat(_totalCredit,\" \\uD3EC\\uC778\\uD2B8\"),amount:_totalPrice,buyer_email:_convertCartEmail},function(rsp){if(rsp.success){var msg=\"결제가 완료되었습니다.\";msg&&history.push(\"/ThankYou\");postDirectBuyCredits(buyItem);}else{var msg=\"결제에 실패하였습니다.\";msg+=\"에러내용 : \"+rsp.error_msg;}alert(msg);});}};export default useForm;","map":{"version":3,"sources":["/Users/merchsquare/Desktop/Kyle/sellist-partners_backup1(02.10)/src/Pages/CheckOut/useForm.js"],"names":["axios","useHistory","qs","useSelector","headers","buyCredit","deleteMultiCart","EMAIL","localStorage","getItem","postCartCredits","cartDataItems","getCash","map","list","credit_cash","getCredit","credit_amount","data","stringify","email","price","credit","post","deleteMultiCredit","userCartId","cart_id","convertUserId","String","deleteData","cart_ids","delete","params","postDirectBuyCredits","buyItem","cartId","from_cart","useForm","cartType","history","store","cartDataReducer","buyCreditReducer","IMP","window","init","totalPrice","reduce","acc","cur","totalCredit","cartEmail","credit_user","convertCartId","convertCartEmail","request_pay","pg","pay_method","merchant_uid","name","amount","buyer_email","rsp","success","msg","push","error_msg","alert"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport qs from \"qs\";\nimport { useSelector } from \"react-redux\";\nimport { headers, buyCredit, deleteMultiCart } from \"../../Config/urls\";\n\nconst EMAIL = localStorage.getItem(\"email\");\n\n// CartType: 1, 정상적으로 구매가 진행되면 포인트 차감 진행\nconst postCartCredits = async cartDataItems => {\n  const getCash = cartDataItems[0]?.[0]?.map(list => list.credit_cash);\n  const getCredit = cartDataItems[0]?.[0]?.map(list => list.credit_amount);\n  const data = qs.stringify({\n    email: EMAIL,\n    price: getCash,\n    credit: getCredit\n  });\n  await axios.post(buyCredit, data, {\n    headers\n  });\n};\n\n// 정상적으로 구매가 진행되면 장바구니에 담긴 Item 삭제\nconst deleteMultiCredit = async cartDataItems => {\n  const userCartId = cartDataItems[0]?.[0]?.map(list => list.cart_id);\n  const convertUserId = String(userCartId);\n  const deleteData = { email: EMAIL, cart_ids: convertUserId };\n  await axios.delete(deleteMultiCart, {\n    headers,\n    params: deleteData\n  });\n};\n\n// CartType:2, 정상적으로 구매가 진행되면 포인트 차감 진행\nconst postDirectBuyCredits = async buyItem => {\n  const getCash = buyItem[0]?.[0][\"credit_cash\"];\n  const getCredit = buyItem[0]?.[0][\"credit_amount\"];\n  const cartId = buyItem[0]?.[0][\"cart_id\"];\n  const data = qs.stringify({\n    email: EMAIL,\n    price: getCash,\n    credit: getCredit,\n    from_cart: 1,\n    cart_id: cartId\n  });\n  await axios.post(buyCredit, data, {\n    headers\n  });\n};\n\n/* 전달 받은 cartType 숫자에 따라 결재 process가 구분된다.\n1: 장바구니에 담긴 상품을 구매할 경우 -> 개별 item의 합계를 구하고 결재를 진행한다.\n2: 바로 구매하기 버튼으로 상품을 구매할 경우 -> 최근에 담긴 store item을 확인하여 낱개 item의 결재를 진행한다.\n*/\nconst useForm = cartType => {\n  const history = useHistory();\n  const cartDataItems = useSelector(store => store.cartDataReducer);\n  const buyItem = useSelector(store => store.buyCreditReducer);\n  const IMP = window.IMP;\n  IMP.init(\"imp45750210\");\n\n  if (cartType === 1) {\n    const totalPrice = cartDataItems[0]?.[0].reduce((acc, cur) => {\n      return (acc += cur.credit_cash);\n    }, 0);\n    const totalCredit = cartDataItems[0]?.[0].reduce((acc, cur) => {\n      return (acc += cur.credit_amount);\n    }, 0);\n    const cartEmail = cartDataItems[0]?.[0]?.map(list => list.credit_user);\n    const cartId = cartDataItems[0]?.[0]?.map(list => list.cart_id);\n    const convertCartId = String(cartId);\n    const convertCartEmail = String(cartEmail[0]);\n    IMP.request_pay(\n      {\n        pg: \"kcp\",\n        pay_method: \"card\",\n        merchant_uid: convertCartId,\n        name: `${totalCredit} 포인트`,\n        amount: totalPrice,\n        buyer_email: convertCartEmail\n      },\n      function (rsp) {\n        if (rsp.success) {\n          var msg = \"결제가 완료되었습니다.\";\n          msg && history.push(\"/ThankYou\");\n          deleteMultiCredit(cartDataItems);\n          postCartCredits(cartDataItems);\n        } else {\n          var msg = \"결제에 실패하였습니다.\";\n          msg += \"에러내용 : \" + rsp.error_msg;\n        }\n        alert(msg);\n      }\n    );\n  }\n  if (cartType === 2) {\n    const totalPrice = buyItem[0]?.[0][\"credit_cash\"];\n    const totalCredit = buyItem[0]?.[0][\"credit_amount\"];\n    const cartEmail = buyItem[0]?.[0][\"email\"];\n    const cartId = buyItem[0]?.[0][\"cart_id\"];\n    const convertCartId = String(cartId);\n    const convertCartEmail = String(cartEmail);\n    IMP.request_pay(\n      {\n        pg: \"kcp\",\n        pay_method: \"card\",\n        merchant_uid: convertCartId,\n        name: `${totalCredit} 포인트`,\n        amount: totalPrice,\n        buyer_email: convertCartEmail\n      },\n      function (rsp) {\n        if (rsp.success) {\n          var msg = \"결제가 완료되었습니다.\";\n          msg && history.push(\"/ThankYou\");\n          postDirectBuyCredits(buyItem);\n        } else {\n          var msg = \"결제에 실패하였습니다.\";\n          msg += \"에러내용 : \" + rsp.error_msg;\n        }\n        alert(msg);\n      }\n    );\n  }\n};\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}