{"ast":null,"code":"var _jsxFileName = \"/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Components/resetPw/ResetPw.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { SnackbarContent } from \"@material-ui/core\";\nimport { resetPwApi, TOKEN } from \"../../Config/urls\";\nimport { center, container, header } from \"../../Config/commonStyles\";\nimport Logo from \"../../Images/Logo\";\nimport Partners from \"../../Images/Partners\";\nimport ArrowBack from \"../../Images/ArrowBack\";\nimport Visiblility from \"../../../src/Images/Visibility\";\nimport VisibilityOff from \"../../../src/Images/VisibilityOff\";\n\nfunction ResetPw(props) {\n  const propsFromResetPwPage = props.props;\n  const [inputState, setInputState] = useState({\n    newPassword: \"\",\n    checkPassword: \"\"\n  });\n  const [error, setError] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [pwvisibility, setPwVisibility] = useState([false, false]);\n  const regPassword = /^[a-zA-Z0-9!@#$%\\^&*)(+=._-]{8,}$/; //영문대소문,숫자,특수문자,최소8자\n\n  const pwFilled = inputState.newPassword.length > 0;\n  const pwCheckFilled = inputState.checkPassword.length > 0;\n  const isBtnActive = inputState.newPassword.length > 0 && inputState.checkPassword.length > 0;\n\n  function inputHandler(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputState(prevState => ({ ...prevState,\n      [name]: value\n    }));\n\n    if (name === \"newPassword\" && !regPassword.test(value)) {\n      setError(true);\n\n      if (value.length === 0) {\n        setError(false);\n        setInputState({\n          newPassword: \"\",\n          checkPassword: \"\"\n        });\n      }\n    } else {\n      setError(false);\n      setInputState(prevState => ({ ...prevState,\n        [name]: value\n      }));\n    }\n  }\n\n  function eyeIcon(idx) {\n    const pwvisibilityStatus = [...pwvisibility];\n    pwvisibilityStatus[idx] = !pwvisibilityStatus[idx];\n    setPwVisibility(pwvisibilityStatus);\n  }\n\n  function handlebtn(e) {\n    const {\n      newPassword,\n      checkPassword\n    } = inputState;\n\n    if (regPassword.test(newPassword)) {}\n\n    if (newPassword !== checkPassword) {\n      alert(\"비밀번호가 일치하지 않습니다.\");\n    } else if (newPassword === checkPassword) {\n      getFetch();\n    }\n  }\n\n  function getFetch() {\n    const formData = new FormData();\n    formData.append(\"password\", inputState.newPassword);\n    formData.append(\"token\", props.token);\n    fetch(resetPwApi, {\n      method: \"POST\",\n      headers: {\n        Authorization: TOKEN\n      },\n      body: formData\n    }).then(res => res.json()).then(res => {\n      if (res.success === 1) {\n        setOpen(true);\n        setTimeout(() => {\n          propsFromResetPwPage.history.push(\"/\");\n        }, 3000);\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TopBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => propsFromResetPwPage.history.push(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"partners\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Partners, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(InputBox, {\n    error: error,\n    pwFilled: pwFilled,\n    pwCheckFilled: pwCheckFilled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputBoxText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"\\uC0C8\\uB85C\\uC6B4 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: pwvisibility[0] ? \"text\" : \"password\",\n    placeholder: \"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",\n    className: \"newPw errorForPw\",\n    name: \"newPassword\",\n    onChange: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), pwFilled && pwvisibility && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"eyeIcon\",\n    onClick: () => eyeIcon(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Visiblility, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), pwFilled && !pwvisibility[0] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"eyeIcon\",\n    onClick: () => eyeIcon(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(VisibilityOff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }))), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"passwordError\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uB294 \\uCD5C\\uC18C 8\\uC790 \\uC774\\uC0C1\\uC774\\uC5B4\\uC57C \\uD569\\uB2C8\\uB2E4.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: pwvisibility[1] ? \"text\" : \"password\",\n    placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    className: \"checkNewPw\",\n    onChange: inputHandler,\n    name: \"checkPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }), pwCheckFilled && pwvisibility && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"eyeIcon\",\n    onClick: () => eyeIcon(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Visiblility, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })), pwCheckFilled && !pwvisibility[1] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"eyeIcon\",\n    onClick: () => eyeIcon(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(VisibilityOff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(FooterBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChangeButton, {\n    button: isBtnActive,\n    disabled: !isBtnActive,\n    onClick: handlebtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"\",\n      horizontal: \"center\"\n    },\n    open: open,\n    autoHideDuration: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SnackbarContent, {\n    message: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uBCC0\\uACBD\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\",\n    style: {\n      backgroundColor: \"#757575\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default ResetPw;\nconst Center = center;\nconst Container = container;\nconst TopBox = styled.div`\n  display: flex;\n  height: 56px;\n  padding: 32px;\n  cursor: pointer;\n  @media screen and (min-width: 529px) {\n    display: none;\n  }\n`;\nconst Header = header;\nconst InputBox = styled.div`\n  margin-top: 10%;\n  display: flex;\n  flex-direction: column;\n  padding-right: 16px;\n  padding-left: 16px;\n\n  div {\n    display: flex;\n    position: relative;\n\n    input {\n      padding: 13px;\n      width: 100%;\n      height: 56px;\n      background: white;\n      font-size: 16px;\n    }\n\n    .eyeIcon {\n      left: 88%;\n      top: 6%;\n      position: absolute;\n    }\n  }\n\n  div:last-child {\n    .eyeIcon {\n      top: 30%;\n    }\n  }\n\n  .errorForPw {\n    ${({\n  error\n}) => error && `border-bottom: 1px solid red`}\n  }\n\n  .passwordError {\n    top: 5px;\n    font-size: 13px;\n    color: #e64a19;\n    left: 2%;\n  }\n  .checkNewPw {\n    margin-top: 5%;\n  }\n`;\nconst InputBoxText = styled.div`\n  margin-bottom: 32px;\n  font-weight: 500;\n  font-size: 21px;\n  line-height: 25px;\n`;\nconst FooterBox = styled.div`\n  margin-top: 15%;\n  display: flex;\n  flex-direction: column;\n  padding-right: 16px;\n  padding-left: 16px;\n  p {\n    height: 18px;\n    font-size: 14px;\n    text-align: center;\n    color: #424242;\n  }\n  .terms {\n    margin-top: 5%;\n    display: flex;\n    justify-content: space-evenly;\n    font-weight: bold;\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: 0.08em;\n  }\n  div {\n    font-size: 14px;\n    line-height: 14px;\n    font-weight: bold;\n    color: white;\n    justify-content: center;\n  }\n`;\nconst ChangeButton = styled.button`\n  margin-top: 37%;\n  height: 48px;\n  background: #bdbdbd;\n  border-radius: 4px;\n  font-weight: bold;\n  font-size: 14px;\n  text-align: center;\n  letter-spacing: 0.08em;\n  color: #ffffff;\n  @media screen and (max-width: 529px) {\n    margin-top: 55%;\n  }\n  ${({\n  button\n}) => button ? `background: #212121;` : `background: #BDBDBD;`}\n`;","map":{"version":3,"sources":["/Users/merchsquare/Desktop/Kyle/sellist-partners/src/Components/resetPw/ResetPw.js"],"names":["React","useState","styled","Snackbar","SnackbarContent","resetPwApi","TOKEN","center","container","header","Logo","Partners","ArrowBack","Visiblility","VisibilityOff","ResetPw","props","propsFromResetPwPage","inputState","setInputState","newPassword","checkPassword","error","setError","open","setOpen","pwvisibility","setPwVisibility","regPassword","pwFilled","length","pwCheckFilled","isBtnActive","inputHandler","e","name","value","target","prevState","test","eyeIcon","idx","pwvisibilityStatus","handlebtn","alert","getFetch","formData","FormData","append","token","fetch","method","headers","Authorization","body","then","res","json","success","setTimeout","history","push","vertical","horizontal","backgroundColor","Center","Container","TopBox","div","Header","InputBox","InputBoxText","FooterBox","ChangeButton","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { SnackbarContent } from \"@material-ui/core\";\nimport { resetPwApi, TOKEN } from \"../../Config/urls\";\nimport { center, container, header } from \"../../Config/commonStyles\";\nimport Logo from \"../../Images/Logo\";\nimport Partners from \"../../Images/Partners\";\nimport ArrowBack from \"../../Images/ArrowBack\";\nimport Visiblility from \"../../../src/Images/Visibility\";\nimport VisibilityOff from \"../../../src/Images/VisibilityOff\";\n\nfunction ResetPw(props) {\n  const propsFromResetPwPage = props.props;\n  const [inputState, setInputState] = useState({\n    newPassword: \"\",\n    checkPassword: \"\"\n  });\n  const [error, setError] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [pwvisibility, setPwVisibility] = useState([false, false]);\n\n  const regPassword = /^[a-zA-Z0-9!@#$%\\^&*)(+=._-]{8,}$/; //영문대소문,숫자,특수문자,최소8자\n  const pwFilled = inputState.newPassword.length > 0;\n  const pwCheckFilled = inputState.checkPassword.length > 0;\n  const isBtnActive =\n    inputState.newPassword.length > 0 && inputState.checkPassword.length > 0;\n\n  function inputHandler(e) {\n    const { name, value } = e.target;\n    setInputState(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n\n    if (name === \"newPassword\" && !regPassword.test(value)) {\n      setError(true);\n      if (value.length === 0) {\n        setError(false);\n        setInputState({ newPassword: \"\", checkPassword: \"\" });\n      }\n    } else {\n      setError(false);\n      setInputState(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  }\n\n  function eyeIcon(idx) {\n    const pwvisibilityStatus = [...pwvisibility];\n    pwvisibilityStatus[idx] = !pwvisibilityStatus[idx];\n    setPwVisibility(pwvisibilityStatus);\n  }\n\n  function handlebtn(e) {\n    const { newPassword, checkPassword } = inputState;\n    if (regPassword.test(newPassword)) {\n    }\n    if (newPassword !== checkPassword) {\n      alert(\"비밀번호가 일치하지 않습니다.\");\n    } else if (newPassword === checkPassword) {\n      getFetch();\n    }\n  }\n\n  function getFetch() {\n    const formData = new FormData();\n    formData.append(\"password\", inputState.newPassword);\n    formData.append(\"token\", props.token);\n\n    fetch(resetPwApi, {\n      method: \"POST\",\n      headers: {\n        Authorization: TOKEN\n      },\n      body: formData\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.success === 1) {\n          setOpen(true);\n          setTimeout(() => {\n            propsFromResetPwPage.history.push(\"/\");\n          }, 3000);\n        }\n      });\n  }\n\n  return (\n    <Center>\n      <Container>\n        <TopBox>\n          <div onClick={() => propsFromResetPwPage.history.push(\"/\")}>\n            <ArrowBack />\n          </div>\n        </TopBox>\n        <Header>\n          <div>\n            <div className=\"logo\">\n              <Logo />\n            </div>\n            <div className=\"partners\">\n              <Partners />\n            </div>\n          </div>\n        </Header>\n        <InputBox\n          error={error}\n          pwFilled={pwFilled}\n          pwCheckFilled={pwCheckFilled}\n        >\n          <InputBoxText>새로운 비밀번호를 입력하세요.</InputBoxText>\n          <div>\n            <input\n              type={pwvisibility[0] ? \"text\" : \"password\"}\n              placeholder=\"새 비밀번호\"\n              className=\"newPw errorForPw\"\n              name=\"newPassword\"\n              onChange={inputHandler}\n            />\n            {pwFilled && pwvisibility && (\n              <div className=\"eyeIcon\" onClick={() => eyeIcon(0)}>\n                <Visiblility />\n              </div>\n            )}\n            {pwFilled && !pwvisibility[0] && (\n              <div className=\"eyeIcon\" onClick={() => eyeIcon(0)}>\n                <VisibilityOff />\n              </div>\n            )}\n          </div>\n          {error && (\n            <div className=\"passwordError\">\n              비밀번호는 최소 8자 이상이어야 합니다.\n            </div>\n          )}\n          <div>\n            <input\n              type={pwvisibility[1] ? \"text\" : \"password\"}\n              placeholder=\"비밀번호 확인\"\n              className=\"checkNewPw\"\n              onChange={inputHandler}\n              name=\"checkPassword\"\n            />\n            {pwCheckFilled && pwvisibility && (\n              <div className=\"eyeIcon\" onClick={() => eyeIcon(1)}>\n                <Visiblility />\n              </div>\n            )}\n            {pwCheckFilled && !pwvisibility[1] && (\n              <div className=\"eyeIcon\" onClick={() => eyeIcon(1)}>\n                <VisibilityOff />\n              </div>\n            )}\n          </div>\n        </InputBox>\n        <FooterBox>\n          <ChangeButton\n            button={isBtnActive}\n            disabled={!isBtnActive}\n            onClick={handlebtn}\n          >\n            비밀번호 변경\n          </ChangeButton>\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"\",\n              horizontal: \"center\"\n            }}\n            open={open}\n            autoHideDuration={3000}\n          >\n            <SnackbarContent\n              message=\"비밀번호가 변경되었습니다.\"\n              style={{\n                backgroundColor: \"#757575\"\n              }}\n            />\n          </Snackbar>\n        </FooterBox>\n      </Container>\n    </Center>\n  );\n}\nexport default ResetPw;\n\nconst Center = center;\n\nconst Container = container;\n\nconst TopBox = styled.div`\n  display: flex;\n  height: 56px;\n  padding: 32px;\n  cursor: pointer;\n  @media screen and (min-width: 529px) {\n    display: none;\n  }\n`;\n\nconst Header = header;\n\nconst InputBox = styled.div`\n  margin-top: 10%;\n  display: flex;\n  flex-direction: column;\n  padding-right: 16px;\n  padding-left: 16px;\n\n  div {\n    display: flex;\n    position: relative;\n\n    input {\n      padding: 13px;\n      width: 100%;\n      height: 56px;\n      background: white;\n      font-size: 16px;\n    }\n\n    .eyeIcon {\n      left: 88%;\n      top: 6%;\n      position: absolute;\n    }\n  }\n\n  div:last-child {\n    .eyeIcon {\n      top: 30%;\n    }\n  }\n\n  .errorForPw {\n    ${({ error }) => error && `border-bottom: 1px solid red`}\n  }\n\n  .passwordError {\n    top: 5px;\n    font-size: 13px;\n    color: #e64a19;\n    left: 2%;\n  }\n  .checkNewPw {\n    margin-top: 5%;\n  }\n`;\nconst InputBoxText = styled.div`\n  margin-bottom: 32px;\n  font-weight: 500;\n  font-size: 21px;\n  line-height: 25px;\n`;\nconst FooterBox = styled.div`\n  margin-top: 15%;\n  display: flex;\n  flex-direction: column;\n  padding-right: 16px;\n  padding-left: 16px;\n  p {\n    height: 18px;\n    font-size: 14px;\n    text-align: center;\n    color: #424242;\n  }\n  .terms {\n    margin-top: 5%;\n    display: flex;\n    justify-content: space-evenly;\n    font-weight: bold;\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: 0.08em;\n  }\n  div {\n    font-size: 14px;\n    line-height: 14px;\n    font-weight: bold;\n    color: white;\n    justify-content: center;\n  }\n`;\nconst ChangeButton = styled.button`\n  margin-top: 37%;\n  height: 48px;\n  background: #bdbdbd;\n  border-radius: 4px;\n  font-weight: bold;\n  font-size: 14px;\n  text-align: center;\n  letter-spacing: 0.08em;\n  color: #ffffff;\n  @media screen and (max-width: 529px) {\n    margin-top: 55%;\n  }\n  ${({ button }) => (button ? `background: #212121;` : `background: #BDBDBD;`)}\n`;\n"]},"metadata":{},"sourceType":"module"}